[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.js":"3","/app/src/pages/index.js":"4","/app/src/contexts/index.js":"5","/app/src/api/index.js":"6","/app/src/components/index.js":"7","/app/src/contexts/recipes-context.js":"8","/app/src/contexts/auth-context.js":"9","/app/src/contexts/user-context.js":"10","/app/src/pages/main/index.js":"11","/app/src/pages/about/index.js":"12","/app/src/pages/signin/index.js":"13","/app/src/pages/technologies/index.js":"14","/app/src/pages/favorites/index.js":"15","/app/src/pages/recipe-edit/index.js":"16","/app/src/pages/cart/index.js":"17","/app/src/pages/user/index.js":"18","/app/src/components/header/index.js":"19","/app/src/components/button/index.js":"20","/app/src/components/tag/index.js":"21","/app/src/components/main/index.js":"22","/app/src/components/container/index.js":"23","/app/src/pages/single-card/index.js":"24","/app/src/components/icons/index.js":"25","/app/src/pages/signup/index.js":"26","/app/src/pages/not-found/index.js":"27","/app/src/pages/change-password/index.js":"28","/app/src/components/tags-container/index.js":"29","/app/src/components/input/index.js":"30","/app/src/pages/subscriptions/index.js":"31","/app/src/components/nav/index.js":"32","/app/src/pages/update-avatar/index.js":"33","/app/src/pages/recipe-create/index.js":"34","/app/src/pages/password-reset/index.js":"35","/app/src/components/link/index.js":"36","/app/src/components/account-menu-mobile/index.js":"37","/app/src/components/account-mobile/index.js":"38","/app/src/components/account-menu/index.js":"39","/app/src/components/card/index.js":"40","/app/src/components/pagination/index.js":"41","/app/src/components/textarea/index.js":"42","/app/src/components/checkbox/index.js":"43","/app/src/components/card-list/index.js":"44","/app/src/components/ingredients-search/index.js":"45","/app/src/components/checkbox-group/index.js":"46","/app/src/components/file-input/index.js":"47","/app/src/components/subscription/index.js":"48","/app/src/components/protected-route/index.js":"49","/app/src/components/purchase/index.js":"50","/app/src/components/form/index.js":"51","/app/src/components/nav-menu/index.js":"52","/app/src/components/footer/index.js":"53","/app/src/components/form-title/index.jsx":"54","/app/src/components/orders/index.js":"55","/app/src/components/subscription-list/index.js":"56","/app/src/utils/index.js":"57","/app/src/components/account/index.js":"58","/app/src/components/title/index.js":"59","/app/src/components/popup/index.js":"60","/app/src/components/purchase-list/index.js":"61","/app/src/pages/single-card/description/index.js":"62","/app/src/pages/single-card/ingredients/index.js":"63","/app/src/components/notification/index.js":"64","/app/src/components/icons/star/index.js":"65","/app/src/components/icons/clock/index.js":"66","/app/src/components/icons/check/index.js":"67","/app/src/components/icons/user/index.js":"68","/app/src/components/icons/arrow-left/index.js":"69","/app/src/components/icons/star-active/index.js":"70","/app/src/components/icons/arrow-right/index.js":"71","/app/src/components/icons/logout-menu/index.js":"72","/app/src/components/icons/saved-menu/index.js":"73","/app/src/components/icons/plus/index.js":"74","/app/src/components/icons/done/index.js":"75","/app/src/components/icons/like/index.js":"76","/app/src/components/icons/add-user/index.js":"77","/app/src/components/icons/like-active/index.js":"78","/app/src/components/icons/reset-password-menu/index.js":"79","/app/src/components/icons/subscriptions-menu/index.js":"80","/app/src/components/icons/ingredient-delete/index.js":"81","/app/src/components/icons/receipt-delete/index.js":"82","/app/src/components/icons/arrow-expand/index.js":"83","/app/src/components/icons/cart/index.js":"84","/app/src/components/icons/popup-close/index.js":"85","/app/src/components/icons/pagination-arrow/index.js":"86","/app/src/components/icons/add-avatar/index.js":"87","/app/src/components/icons/delete-avatar/index.js":"88","/app/src/components/icons/copy-link/index.js":"89","/app/src/components/change-password-text/index.js":"90","/app/src/configs/navigation.js":"91","/app/src/components/avatar-popup/index.js":"92","/app/src/utils/hex-to-rgba.js":"93","/app/src/utils/validation.js":"94","/app/src/utils/use-recipes.js":"95","/app/src/utils/use-recipe.js":"96","/app/src/utils/use-subscriptions.js":"97","/app/src/utils/use-tags.js":"98"},{"size":592,"mtime":1747923699724,"results":"99","hashOfConfig":"100"},{"size":362,"mtime":1747923699727,"results":"101","hashOfConfig":"100"},{"size":8567,"mtime":1747923699697,"results":"102","hashOfConfig":"100"},{"size":814,"mtime":1747923699725,"results":"103","hashOfConfig":"100"},{"size":187,"mtime":1747923699709,"results":"104","hashOfConfig":"100"},{"size":9180,"mtime":1747923699697,"results":"105","hashOfConfig":"100"},{"size":1651,"mtime":1747923699705,"results":"106","hashOfConfig":"100"},{"size":64,"mtime":1747923699709,"results":"107","hashOfConfig":"100"},{"size":63,"mtime":1747923699709,"results":"108","hashOfConfig":"100"},{"size":63,"mtime":1747923699709,"results":"109","hashOfConfig":"100"},{"size":1607,"mtime":1747923699725,"results":"110","hashOfConfig":"100"},{"size":2695,"mtime":1747923699724,"results":"111","hashOfConfig":"100"},{"size":2089,"mtime":1747923699726,"results":"112","hashOfConfig":"100"},{"size":1257,"mtime":1747923699727,"results":"113","hashOfConfig":"100"},{"size":1655,"mtime":1747923699725,"results":"114","hashOfConfig":"100"},{"size":13274,"mtime":1747923699726,"results":"115","hashOfConfig":"100"},{"size":1524,"mtime":1747923699724,"results":"116","hashOfConfig":"100"},{"size":4587,"mtime":1747923699727,"results":"117","hashOfConfig":"100"},{"size":713,"mtime":1747923699701,"results":"118","hashOfConfig":"100"},{"size":708,"mtime":1747923699699,"results":"119","hashOfConfig":"100"},{"size":204,"mtime":1747923699708,"results":"120","hashOfConfig":"100"},{"size":366,"mtime":1747923699705,"results":"121","hashOfConfig":"100"},{"size":228,"mtime":1747923699700,"results":"122","hashOfConfig":"100"},{"size":8916,"mtime":1747923699726,"results":"123","hashOfConfig":"100"},{"size":1407,"mtime":1747923699703,"results":"124","hashOfConfig":"100"},{"size":2616,"mtime":1747923699726,"results":"125","hashOfConfig":"100"},{"size":768,"mtime":1747923699725,"results":"126","hashOfConfig":"100"},{"size":3541,"mtime":1747923699724,"results":"127","hashOfConfig":"100"},{"size":390,"mtime":1747923699708,"results":"128","hashOfConfig":"100"},{"size":2635,"mtime":1747923699705,"results":"129","hashOfConfig":"100"},{"size":1443,"mtime":1747923699727,"results":"130","hashOfConfig":"100"},{"size":1536,"mtime":1747923699706,"results":"131","hashOfConfig":"100"},{"size":1865,"mtime":1747923699727,"results":"132","hashOfConfig":"100"},{"size":10977,"mtime":1747923699725,"results":"133","hashOfConfig":"100"},{"size":1480,"mtime":1747923699725,"results":"134","hashOfConfig":"100"},{"size":478,"mtime":1747923699705,"results":"135","hashOfConfig":"100"},{"size":1043,"mtime":1747923699697,"results":"136","hashOfConfig":"100"},{"size":3247,"mtime":1747923699698,"results":"137","hashOfConfig":"100"},{"size":1019,"mtime":1747923699698,"results":"138","hashOfConfig":"100"},{"size":3888,"mtime":1747923699699,"results":"139","hashOfConfig":"100"},{"size":1589,"mtime":1747923699706,"results":"140","hashOfConfig":"100"},{"size":1082,"mtime":1747923699708,"results":"141","hashOfConfig":"100"},{"size":552,"mtime":1747923699700,"results":"142","hashOfConfig":"100"},{"size":172,"mtime":1747923699699,"results":"143","hashOfConfig":"100"},{"size":350,"mtime":1747923699705,"results":"144","hashOfConfig":"100"},{"size":922,"mtime":1747923699699,"results":"145","hashOfConfig":"100"},{"size":2060,"mtime":1747923699700,"results":"146","hashOfConfig":"100"},{"size":3962,"mtime":1747923699708,"results":"147","hashOfConfig":"100"},{"size":355,"mtime":1747923699707,"results":"148","hashOfConfig":"100"},{"size":2029,"mtime":1747923699707,"results":"149","hashOfConfig":"100"},{"size":268,"mtime":1747923699701,"results":"150","hashOfConfig":"100"},{"size":1053,"mtime":1747923699706,"results":"151","hashOfConfig":"100"},{"size":1227,"mtime":1747923699700,"results":"152","hashOfConfig":"100"},{"size":279,"mtime":1747923699700,"results":"153","hashOfConfig":"100"},{"size":302,"mtime":1747923699706,"results":"154","hashOfConfig":"100"},{"size":407,"mtime":1747923699707,"results":"155","hashOfConfig":"100"},{"size":381,"mtime":1747923699728,"results":"156","hashOfConfig":"100"},{"size":3581,"mtime":1747923699698,"results":"157","hashOfConfig":"100"},{"size":209,"mtime":1747923699708,"results":"158","hashOfConfig":"100"},{"size":860,"mtime":1747923699707,"results":"159","hashOfConfig":"100"},{"size":437,"mtime":1747923699707,"results":"160","hashOfConfig":"100"},{"size":350,"mtime":1747923699726,"results":"161","hashOfConfig":"100"},{"size":613,"mtime":1747923699726,"results":"162","hashOfConfig":"100"},{"size":453,"mtime":1747923699706,"results":"163","hashOfConfig":"100"},{"size":290,"mtime":1747923699704,"results":"164","hashOfConfig":"100"},{"size":521,"mtime":1747923699702,"results":"165","hashOfConfig":"100"},{"size":366,"mtime":1747923699702,"results":"166","hashOfConfig":"100"},{"size":522,"mtime":1747923699705,"results":"167","hashOfConfig":"100"},{"size":1591,"mtime":1747923699702,"results":"168","hashOfConfig":"100"},{"size":324,"mtime":1747923699704,"results":"169","hashOfConfig":"100"},{"size":1565,"mtime":1747923699702,"results":"170","hashOfConfig":"100"},{"size":441,"mtime":1747923699703,"results":"171","hashOfConfig":"100"},{"size":448,"mtime":1747923699704,"results":"172","hashOfConfig":"100"},{"size":459,"mtime":1747923699704,"results":"173","hashOfConfig":"100"},{"size":429,"mtime":1747923699703,"results":"174","hashOfConfig":"100"},{"size":454,"mtime":1747923699703,"results":"175","hashOfConfig":"100"},{"size":659,"mtime":1747923699701,"results":"176","hashOfConfig":"100"},{"size":473,"mtime":1747923699703,"results":"177","hashOfConfig":"100"},{"size":854,"mtime":1747923699704,"results":"178","hashOfConfig":"100"},{"size":546,"mtime":1747923699704,"results":"179","hashOfConfig":"100"},{"size":369,"mtime":1747923699703,"results":"180","hashOfConfig":"100"},{"size":617,"mtime":1747923699704,"results":"181","hashOfConfig":"100"},{"size":375,"mtime":1747923699701,"results":"182","hashOfConfig":"100"},{"size":643,"mtime":1747923699702,"results":"183","hashOfConfig":"100"},{"size":365,"mtime":1747923699704,"results":"184","hashOfConfig":"100"},{"size":376,"mtime":1747923699703,"results":"185","hashOfConfig":"100"},{"size":1047,"mtime":1747923699701,"results":"186","hashOfConfig":"100"},{"size":1195,"mtime":1747923699702,"results":"187","hashOfConfig":"100"},{"size":1985,"mtime":1747923699702,"results":"188","hashOfConfig":"100"},{"size":1185,"mtime":1747923699699,"results":"189","hashOfConfig":"100"},{"size":827,"mtime":1747923699709,"results":"190","hashOfConfig":"100"},{"size":3140,"mtime":1747923699698,"results":"191","hashOfConfig":"100"},{"size":260,"mtime":1747923699728,"results":"192","hashOfConfig":"100"},{"size":1264,"mtime":1747923699728,"results":"193","hashOfConfig":"100"},{"size":1492,"mtime":1747923699728,"results":"194","hashOfConfig":"100"},{"size":1573,"mtime":1747923699728,"results":"195","hashOfConfig":"100"},{"size":1024,"mtime":1747923699728,"results":"196","hashOfConfig":"100"},{"size":353,"mtime":1747923699728,"results":"197","hashOfConfig":"100"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1320cw1",{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301"},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305"},{"filePath":"306","messages":"307","suppressedMessages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309"},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313"},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317"},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321"},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340"},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344"},{"filePath":"345","messages":"346","suppressedMessages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348"},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","suppressedMessages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","suppressedMessages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358"},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362"},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372"},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","suppressedMessages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","suppressedMessages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382"},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","suppressedMessages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","suppressedMessages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398"},{"filePath":"399","messages":"400","suppressedMessages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","suppressedMessages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","suppressedMessages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408"},{"filePath":"409","messages":"410","suppressedMessages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","suppressedMessages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","suppressedMessages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","suppressedMessages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","suppressedMessages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","suppressedMessages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","suppressedMessages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","suppressedMessages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","suppressedMessages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","suppressedMessages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","suppressedMessages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","suppressedMessages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","suppressedMessages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","suppressedMessages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","suppressedMessages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","suppressedMessages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","suppressedMessages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","suppressedMessages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","suppressedMessages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","suppressedMessages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","suppressedMessages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","suppressedMessages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","suppressedMessages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","suppressedMessages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","suppressedMessages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","suppressedMessages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","suppressedMessages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","suppressedMessages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","suppressedMessages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","suppressedMessages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499"},{"filePath":"500","messages":"501","suppressedMessages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"503","messages":"504","suppressedMessages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"506","messages":"507","suppressedMessages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"509","messages":"510","suppressedMessages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512"},{"filePath":"513","messages":"514","suppressedMessages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516"},{"filePath":"517","messages":"518","suppressedMessages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520"},{"filePath":"521","messages":"522","suppressedMessages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/index.js",[],[],"/app/src/reportWebVitals.js",[],[],"/app/src/App.js",["524"],[],"import \"./fonts/SanFranciscoProDisplay/fonts.css\";\nimport \"./App.css\";\nimport { Switch, Route, useHistory, Redirect } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { Header, Footer, ProtectedRoute } from \"./components\";\nimport api from \"./api\";\nimport styles from \"./styles.module.css\";\n\nimport {\n  // About,\n  Main,\n  Cart,\n  SignIn,\n  Subscriptions,\n  Favorites,\n  SingleCard,\n  SignUp,\n  RecipeEdit,\n  RecipeCreate,\n  User,\n  ChangePassword,\n  NotFound,\n  UpdateAvatar,\n  ResetPassword,\n  // Technologies,\n} from \"./pages\";\n\nimport { AuthContext, UserContext } from \"./contexts\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(null);\n  const [user, setUser] = useState({});\n  const [orders, setOrders] = useState(0);\n  const [authError, setAuthError] = useState({ submitError: \"\" });\n  const [registrError, setRegistrError] = useState({ submitError: \"\" });\n  const [changePasswordError, setChangePasswordError] = useState({\n    submitError: \"\",\n  });\n\n  const registration = ({\n    email,\n    password,\n    username,\n    first_name,\n    last_name,\n  }) => {\n    api\n      .signup({ email, password, username, first_name, last_name })\n      .then(() => {\n        history.push(\"/signin\");\n      })\n      .catch((err) => {\n        const errors = Object.values(err);\n        if (errors) {\n          setRegistrError({ submitError: errors.join(\", \") });\n        }\n        setLoggedIn(false);\n      });\n  };\n\n  const changePassword = ({ new_password, current_password }) => {\n    api\n      .changePassword({ new_password, current_password })\n      .then((res) => {\n        history.push(\"/signin\");\n      })\n      .catch((err) => {\n        const errors = Object.values(err);\n        if (errors) {\n          setChangePasswordError({ submitError: errors.join(\", \") });\n        }\n      });\n  };\n\n  const changeAvatar = ({ file }) => {\n    api\n      .changeAvatar({ file })\n      .then((res) => {\n        setUser({ ...user, avatar: res.avatar });\n        history.push(`/recipes`);\n      })\n      .catch((err) => {\n        const { non_field_errors } = err;\n        if (non_field_errors) {\n          return alert(non_field_errors.join(\", \"));\n        }\n        const errors = Object.values(err);\n        if (errors) {\n          alert(errors.join(\", \"));\n        }\n      });\n  };\n\n  const authorization = ({ email, password }) => {\n    api\n      .signin({\n        email,\n        password,\n      })\n      .then((res) => {\n        if (res.auth_token) {\n          localStorage.setItem(\"token\", res.auth_token);\n          api\n            .getUserData()\n            .then((res) => {\n              setUser(res);\n              setLoggedIn(true);\n              getOrders();\n            })\n            .catch((err) => {\n              setLoggedIn(false);\n              history.push(\"/signin\");\n            });\n        } else {\n          setLoggedIn(false);\n        }\n      })\n      .catch((err) => {\n        const errors = Object.values(err);\n        if (errors) {\n          setAuthError({ submitError: errors.join(\", \") });\n        }\n        setLoggedIn(false);\n      });\n  };\n\n  const onPasswordReset = ({ email }) => {\n    api\n      .resetPassword({\n        email,\n      })\n      .then((res) => {\n        history.push(\"/signin\");\n      })\n      .catch((err) => {\n        const errors = Object.values(err);\n        if (errors) {\n          alert(errors.join(\", \"));\n        }\n        setLoggedIn(false);\n      });\n  };\n\n  const loadSingleItem = ({ id, callback }) => {\n    setTimeout((_) => {\n      callback();\n    }, 3000);\n  };\n\n  const history = useHistory();\n  const onSignOut = () => {\n    api\n      .signout()\n      .then((res) => {\n        localStorage.removeItem(\"token\");\n        setLoggedIn(false);\n      })\n      .catch((err) => {\n        const errors = Object.values(err);\n        if (errors) {\n          alert(errors.join(\", \"));\n        }\n      });\n  };\n\n  const getOrders = () => {\n    api\n      .getRecipes({\n        page: 1,\n        is_in_shopping_cart: Number(true),\n      })\n      .then((res) => {\n        const { count } = res;\n        setOrders(count);\n      });\n  };\n\n  const updateOrders = (add) => {\n    if (!add && orders <= 0) {\n      return;\n    }\n    if (add) {\n      setOrders(orders + 1);\n    } else {\n      setOrders(orders - 1);\n    }\n  };\n\n  useEffect((_) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      return api\n        .getUserData()\n        .then((res) => {\n          setUser(res);\n          setLoggedIn(true);\n          getOrders();\n        })\n        .catch((err) => {\n          setLoggedIn(false);\n          history.push(\"/recipes\");\n        });\n    } else {\n      setLoggedIn(false);\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   document.addEventListener('keydown', function(event) {\n  //     if (event.ctrlKey && event.shiftKey && event.key === 'z') {\n  //       alert('зиги - добар пас!');\n  //     }\n  //   });\n  // }, [])\n\n  if (loggedIn === null) {\n    return <div className={styles.loading}>Загрузка...</div>;\n  }\n\n  return (\n    <AuthContext.Provider value={loggedIn}>\n      <UserContext.Provider value={user}>\n        <div className=\"App\">\n          <Header orders={orders} loggedIn={loggedIn} onSignOut={onSignOut} />\n          <Switch>\n            <Route\n              exact\n              path=\"/user/:id\"\n              component={User}\n              updateOrders={updateOrders}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/cart\"\n              component={Cart}\n              orders={orders}\n              loggedIn={loggedIn}\n              updateOrders={updateOrders}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/subscriptions\"\n              component={Subscriptions}\n              loggedIn={loggedIn}\n            />\n\n            <ProtectedRoute\n              exact\n              path=\"/favorites\"\n              component={Favorites}\n              loggedIn={loggedIn}\n              updateOrders={updateOrders}\n            />\n\n            <ProtectedRoute\n              exact\n              path=\"/recipes/create\"\n              component={RecipeCreate}\n              loggedIn={loggedIn}\n            />\n\n            <ProtectedRoute\n              exact\n              path=\"/recipes/:id/edit\"\n              component={RecipeEdit}\n              loggedIn={loggedIn}\n              loadItem={loadSingleItem}\n              onItemDelete={getOrders}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/change-password\"\n              component={ChangePassword}\n              loggedIn={loggedIn}\n              submitError={changePasswordError}\n              setSubmitError={setChangePasswordError}\n              onPasswordChange={changePassword}\n            />\n\n            <ProtectedRoute\n              exact\n              path=\"/change-avatar\"\n              component={UpdateAvatar}\n              loggedIn={loggedIn}\n              onAvatarChange={changeAvatar}\n            />\n\n            <Route exact path=\"/recipes/:id\">\n              <SingleCard\n                loggedIn={loggedIn}\n                loadItem={loadSingleItem}\n                updateOrders={updateOrders}\n              />\n            </Route>\n\n            <Route exact path=\"/about\">\n              <NotFound />\n              {/* <About component={About} /> */}\n            </Route>\n\n            <Route exact path=\"/reset-password\">\n              <ResetPassword onPasswordReset={onPasswordReset} />\n            </Route>\n\n            <Route exact path=\"/technologies\">\n              <NotFound />\n              {/* <Technologies component={Technologies}/> */}\n            </Route>\n\n            <Route exact path=\"/recipes\">\n              <Main updateOrders={updateOrders} />\n            </Route>\n\n            <Route exact path=\"/signin\">\n              <SignIn\n                onSignIn={authorization}\n                submitError={authError}\n                setSubmitError={setAuthError}\n              />\n            </Route>\n            <Route exact path=\"/signup\">\n              <SignUp\n                onSignUp={registration}\n                submitError={registrError}\n                setSubmitError={setRegistrError}\n              />\n            </Route>\n            <Route exact path=\"/\">\n              <Redirect to=\"/recipes\" />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n          <Footer />\n        </div>\n      </UserContext.Provider>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","/app/src/pages/index.js",[],[],"/app/src/contexts/index.js",[],[],"/app/src/api/index.js",["525"],[],"class Api {\n  constructor(url, headers) {\n    this._url = url;\n    this._headers = headers;\n  }\n\n  checkResponse(res) {\n    return new Promise((resolve, reject) => {\n      if (res.status === 204) {\n        return resolve(res);\n      }\n      const func = res.status < 400 ? resolve : reject;\n      res.json().then((data) => func(data));\n    });\n  }\n\n  checkFileDownloadResponse(res) {\n    return new Promise((resolve, reject) => {\n      if (res.status < 400) {\n        return res.blob().then((blob) => {\n          const url = window.URL.createObjectURL(blob);\n          const a = document.createElement(\"a\");\n          a.href = url;\n          a.download = \"shopping-list\";\n          document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n          a.click();\n          a.remove(); //afterwards we remove the element again\n        });\n      }\n      reject();\n    });\n  }\n\n  signin({ email, password }) {\n    return fetch(\"/api/auth/token/login/\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    }).then(this.checkResponse);\n  }\n\n  signout() {\n    const token = localStorage.getItem(\"token\");\n    return fetch(\"/api/auth/token/logout/\", {\n      method: \"POST\",\n      headers: {\n        ...this._headers,\n        authorization: `Token ${token}`,\n      },\n    }).then(this.checkResponse);\n  }\n\n  signup({ email, password, username, first_name, last_name }) {\n    return fetch(`/api/users/`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        email,\n        password,\n        username,\n        first_name,\n        last_name,\n      }),\n    }).then(this.checkResponse);\n  }\n\n  getUserData() {\n    const token = localStorage.getItem(\"token\");\n    return fetch(`/api/users/me/`, {\n      method: \"GET\",\n      headers: {\n        ...this._headers,\n        authorization: `Token ${token}`,\n      },\n    }).then(this.checkResponse);\n  }\n\n  changePassword({ current_password, new_password }) {\n    const token = localStorage.getItem(\"token\");\n    return fetch(`/api/users/set_password/`, {\n      method: \"POST\",\n      headers: {\n        ...this._headers,\n        authorization: `Token ${token}`,\n      },\n      body: JSON.stringify({ current_password, new_password }),\n    }).then(this.checkResponse);\n  }\n\n  changeAvatar({ file }) {\n    const token = localStorage.getItem(\"token\");\n    return fetch(`/api/users/me/avatar/`, {\n      method: \"PUT\",\n      headers: {\n        ...this._headers,\n        authorization: `Token ${token}`,\n      },\n      body: JSON.stringify({ avatar: file }),\n    }).then(this.checkResponse);\n  }\n\n  deleteAvatar() {\n    const token = localStorage.getItem(\"token\");\n    return fetch(`/api/users/me/avatar/`, {\n      method: \"DELETE\",\n      headers: {\n        ...this._headers,\n        authorization: `Token ${token}`,\n      },\n    }).then(this.checkResponse);\n  }\n\n  resetPassword({ email }) {\n    return fetch(`/api/users/reset_password/`, {\n      method: \"POST\",\n      headers: {\n        ...this._headers,\n      },\n      body: JSON.stringify({ email }),\n    }).then(this.checkResponse);\n  }\n\n  // recipes\n\n  getRecipes({\n    page = 1,\n    limit = 6,\n    is_favorited = 0,\n    is_in_shopping_cart = 0,\n    author\n  } = {}) {\n    const token = localStorage.getItem(\"token\");\n    const authorization = token ? { authorization: `Token ${token}` } : {};\n    return fetch(\n      `/api/recipes/?page=${page}&limit=${limit}${\n        author ? `&author=${author}` : \"\"\n      }${is_favorited ? `&is_favorited=${is_favorited}` : \"\"}${\n        is_in_shopping_cart ? `&is_in_shopping_cart=${is_in_shopping_cart}` : \"\"\n      }`,\n      {\n        method: \"GET\",\n        headers: {\n          ...this._headers,\n          ...authorization,\n        },\n      }\n    ).then(this.checkResponse);\n  }\n\n  getRecipe({ recipe_id }) {\n    const token = localStorage.getItem(\"token\");\n    const authorization = token ? { authorization: `Token ${token}` } : {};\n    return fetch(`/api/recipes/${recipe_id}/`, {\n      method: \"GET\",\n      headers: {\n        ...this._headers,\n        ...authorization,\n      },\n    }).then(this.checkResponse);\n  }\n\n  createRecipe({\n    name = \"\",\n    image,\n    cooking_time = 0,\n    text = \"\",\n    ingredients = [],\n  }) {\n    const token = localStorage.getItem(\"token\");\n    return fetch(\"/api/recipes/\", {\n      method: \"POST\",\n      headers: {\n        ...this._headers,\n        authorization: `Token ${token}`,\n      },\n      body: JSON.stringify({\n        name,\n        image,\n        cooking_time,\n        text,\n        ingredients,\n      }),\n    }).then(this.checkResponse);\n  }\n\n  updateRecipe(\n    { name, recipe_id, image, cooking_time, text, ingredients },\n    wasImageUpdated\n  ) {\n    // image was changed\n    const token = localStorage.getItem(\"token\");\n    return fetch(`/api/recipes/${recipe_id}/`, {\n      method: \"PATCH\",\n      headers: {\n        ...this._headers,\n        authorization: `Token ${token}`,\n      },\n      body: JSON.stringify({\n        name,\n        id: recipe_id,\n        image: wasImageUpdated ? image : undefined,\n        cooking_time: Number(cooking_time),\n        text,\n        ingredients,\n      }),\n    }).then(this.checkResponse);\n  }\n\n  addToFavorites({ id }) {\n    const token = localStorage.getItem(\"token\");\n    return fetch(`/api/recipes/${id}/favorite/`, {\n      method: \"POST\",\n      headers: {\n        ...this._headers,\n        authorization: `Token ${token}`,\n      },\n    }).then(this.checkResponse);\n  }\n\n  removeFromFavorites({ id }) {\n    const token = localStorage.getItem(\"token\");\n    return fetch(`/api/recipes/${id}/favorite/`, {\n      method: \"DELETE\",\n      headers: {\n        ...this._headers,\n        authorization: `Token ${token}`,\n      },\n    }).then(this.checkResponse);\n  }\n\n  copyRecipeLink({ id }) {\n    return fetch(`/api/recipes/${id}/get-link/`, {\n      method: \"GET\",\n      headers: {\n        ...this._headers,\n      },\n    }).then(this.checkResponse);\n  }\n\n  getUser({ id }) {\n    const token = localStorage.getItem(\"token\");\n    const authorization = token ? { authorization: `Token ${token}` } : {};\n    return fetch(`/api/users/${id}/`, {\n      method: \"GET\",\n      headers: {\n        ...this._headers,\n        ...authorization,\n      },\n    }).then(this.checkResponse);\n  }\n\n  getUsers({ page = 1, limit = 6 }) {\n    const token = localStorage.getItem(\"token\");\n    return fetch(`/api/users/?page=${page}&limit=${limit}`, {\n      method: \"GET\",\n      headers: {\n        ...this._headers,\n        authorization: `Token ${token}`,\n      },\n    }).then(this.checkResponse);\n  }\n\n  // subscriptions\n\n  getSubscriptions({ page, limit = 6, recipes_limit = 3 }) {\n    const token = localStorage.getItem(\"token\");\n    return fetch(\n      `/api/users/subscriptions/?page=${page}&limit=${limit}&recipes_limit=${recipes_limit}`,\n      {\n        method: \"GET\",\n        headers: {\n          ...this._headers,\n          authorization: `Token ${token}`,\n        },\n      }\n    ).then(this.checkResponse);\n  }\n\n  deleteSubscriptions({ author_id }) {\n    const token = localStorage.getItem(\"token\");\n    return fetch(`/api/users/${author_id}/subscribe/`, {\n      method: \"DELETE\",\n      headers: {\n        ...this._headers,\n        authorization: `Token ${token}`,\n      },\n    }).then(this.checkResponse);\n  }\n\n  subscribe({ author_id }) {\n    const token = localStorage.getItem(\"token\");\n    return fetch(`/api/users/${author_id}/subscribe/`, {\n      method: \"POST\",\n      headers: {\n        ...this._headers,\n        authorization: `Token ${token}`,\n      },\n    }).then(this.checkResponse);\n  }\n\n  // ingredients\n  getIngredients({ name }) {\n    const token = localStorage.getItem(\"token\");\n    return fetch(`/api/ingredients/?name=${name}`, {\n      method: \"GET\",\n      headers: {\n        ...this._headers,\n      },\n    }).then(this.checkResponse);\n  }\n\n\n  addToOrders({ id }) {\n    const token = localStorage.getItem(\"token\");\n    return fetch(`/api/recipes/${id}/shopping_cart/`, {\n      method: \"POST\",\n      headers: {\n        ...this._headers,\n        authorization: `Token ${token}`,\n      },\n    }).then(this.checkResponse);\n  }\n\n  removeFromOrders({ id }) {\n    const token = localStorage.getItem(\"token\");\n    return fetch(`/api/recipes/${id}/shopping_cart/`, {\n      method: \"DELETE\",\n      headers: {\n        ...this._headers,\n        authorization: `Token ${token}`,\n      },\n    }).then(this.checkResponse);\n  }\n\n  deleteRecipe({ recipe_id }) {\n    const token = localStorage.getItem(\"token\");\n    return fetch(`/api/recipes/${recipe_id}/`, {\n      method: \"DELETE\",\n      headers: {\n        ...this._headers,\n        authorization: `Token ${token}`,\n      },\n    }).then(this.checkResponse);\n  }\n\n  downloadFile() {\n    const token = localStorage.getItem(\"token\");\n    return fetch(`/api/recipes/download_shopping_cart/`, {\n      method: \"GET\",\n      headers: {\n        ...this._headers,\n        authorization: `Token ${token}`,\n      },\n    }).then(this.checkFileDownloadResponse);\n  }\n}\n\nexport default new Api(process.env.API_URL || \"http://localhost\", {\n  \"content-type\": \"application/json\",\n});\n","/app/src/components/index.js",[],[],"/app/src/contexts/recipes-context.js",[],[],"/app/src/contexts/auth-context.js",[],[],"/app/src/contexts/user-context.js",[],[],"/app/src/pages/main/index.js",["526","527"],[],"import { Card, Title, Pagination, CardList, Container, Main, CheckboxGroup  } from '../../components'\nimport styles from './styles.module.css'\nimport { useRecipes } from '../../utils/index.js'\nimport { useEffect } from 'react'\nimport api from '../../api'\nimport MetaTags from 'react-meta-tags'\n\nconst HomePage = ({ updateOrders }) => {\n  const {\n    recipes,\n    setRecipes,\n    recipesCount,\n    setRecipesCount,\n    recipesPage,\n    setRecipesPage,\n    handleLike,\n    handleAddToCart\n  } = useRecipes()\n\n  const getRecipes = ({ page = 1 }) => {\n    api\n      .getRecipes({ page })\n      .then(res => {\n        const { results, count } = res\n        setRecipes(results)\n        setRecipesCount(count)\n      })\n  }\n\n  useEffect(_ => {\n    getRecipes({ page: recipesPage })\n  }, [recipesPage])\n\n\n  return <Main>\n    <Container>\n      <MetaTags>\n        <title>Рецепты</title>\n        <meta name=\"description\" content=\"Фудграм - Рецепты\" />\n        <meta property=\"og:title\" content=\"Рецепты\" />\n      </MetaTags>\n      <div className={styles.title}>\n        <Title title='Рецепты' />\n      </div>\n      {recipes.length > 0 && <CardList>\n        {recipes.map(card => <Card\n          {...card}\n          key={card.id}\n          updateOrders={updateOrders}\n          handleLike={handleLike}\n          handleAddToCart={handleAddToCart}\n        />)}\n      </CardList>}\n      <Pagination\n        count={recipesCount}\n        limit={6}\n        page={recipesPage}\n        onPageChange={page => setRecipesPage(page)}\n      />\n    </Container>\n  </Main>\n}\n\nexport default HomePage\n\n","/app/src/pages/about/index.js",["528","529","530"],[],"import { Title, Container, Main } from '../../components'\nimport styles from './styles.module.css'\nimport MetaTags from 'react-meta-tags'\n\nconst About = ({ updateOrders, orders }) => {\n  \n  return <Main>\n    <MetaTags>\n      <title>О проекте</title>\n      <meta name=\"description\" content=\"Фудграм - О проекте\" />\n      <meta property=\"og:title\" content=\"О проекте\" />\n    </MetaTags>\n    \n    <Container>\n      <h1 className={styles.title}>Привет!</h1>\n      <div className={styles.content}>\n        <div>\n          <h2 className={styles.subtitle}>Что это за сайт?</h2>\n          <div className={styles.text}>\n            <p className={styles.textItem}>\n              Представляю вам проект, созданный во время обучения в Яндекс Практикуме. Этот проект — часть учебного курса, но он создан полностью самостоятельно.\n            </p>\n            <p className={styles.textItem}>\n              Цель этого сайта — дать возможность пользователям создавать и хранить рецепты на онлайн-платформе. Кроме того, можно скачать список продуктов, необходимых для\n              приготовления блюда, просмотреть рецепты друзей и добавить любимые рецепты в список избранных.\n            </p>\n            <p className={styles.textItem}>\n              Чтобы использовать все возможности сайта — нужна регистрация. Проверка адреса электронной почты не осуществляется, вы можете ввести любой email. \n            </p>\n            <p className={styles.textItem}>\n              Заходите и делитесь своими любимыми рецептами!\n            </p>\n          </div>\n        </div>\n        <aside>\n          <h2 className={styles.additionalTitle}>\n            Ссылки\n          </h2>\n          <div className={styles.text}>\n            <p className={styles.textItem}>\n              Код проекта находится тут - <a href=\"#\" className={styles.textLink}>Github</a>\n            </p>\n            <p className={styles.textItem}>\n              Автор проекта: <a href=\"#\" className={styles.textLink}>Имя Автора</a>\n            </p>\n          </div>\n        </aside>\n      </div>\n      \n    </Container>\n  </Main>\n}\n\nexport default About\n\n","/app/src/pages/signin/index.js",[],[],"/app/src/pages/technologies/index.js",["531"],[],"import { Title, Container, Main } from '../../components'\nimport styles from './styles.module.css'\nimport MetaTags from 'react-meta-tags'\n\nconst Technologies = () => {\n  \n  return <Main>\n    <MetaTags>\n      <title>О проекте</title>\n      <meta name=\"description\" content=\"Фудграм - Технологии\" />\n      <meta property=\"og:title\" content=\"О проекте\" />\n    </MetaTags>\n    \n    <Container>\n      <h1 className={styles.title}>Технологии</h1>\n      <div className={styles.content}>\n        <div>\n          <h2 className={styles.subtitle}>Технологии, которые применены в этом проекте:</h2>\n          <div className={styles.text}>\n            <ul className={styles.textItem}>\n              <li className={styles.textItem}>\n                Python\n              </li>\n              <li className={styles.textItem}>\n                Django\n              </li>\n              <li className={styles.textItem}>\n                Django REST Framework\n              </li>\n              <li className={styles.textItem}>\n                Djoser\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      \n    </Container>\n  </Main>\n}\n\nexport default Technologies\n\n","/app/src/pages/favorites/index.js",["532","533"],[],"import { Card, Title, Pagination, CardList, Container, Main, CheckboxGroup  } from '../../components'\nimport styles from './styles.module.css'\nimport { useRecipes } from '../../utils/index.js'\nimport { useEffect } from 'react'\nimport api from '../../api'\nimport MetaTags from 'react-meta-tags'\n\nconst Favorites = ({ updateOrders }) => {\n  const {\n    recipes,\n    setRecipes,\n    recipesCount,\n    setRecipesCount,\n    recipesPage,\n    setRecipesPage,\n    handleLike,\n    handleAddToCart\n  } = useRecipes()\n  \n  const getRecipes = ({ page = 1 }) => {\n    api\n      .getRecipes({ page, is_favorited: Number(true) })\n      .then(res => {\n        const { results, count } = res\n        setRecipes(results)\n        setRecipesCount(count)\n      })\n  }\n\n  useEffect(_ => {\n    getRecipes({ page: recipesPage })\n  }, [recipesPage])\n\n\n  return <Main>\n    <Container>\n      <MetaTags>\n        <title>Избранное</title>\n        <meta name=\"description\" content=\"Фудграм - Избранное\" />\n        <meta property=\"og:title\" content=\"Избранное\" />\n      </MetaTags>\n      <div className={styles.title}>\n        <Title title='Избранное' />\n      </div>\n      {recipes.length > 0 && <CardList>\n        {recipes.map(card => <Card\n          {...card}\n          key={card.id}\n          updateOrders={updateOrders}\n          handleLike={handleLike}\n          handleAddToCart={handleAddToCart}\n        />)}\n      </CardList>}\n      <Pagination\n        count={recipesCount}\n        limit={6}\n        page={recipesPage}\n        onPageChange={page => setRecipesPage(page)}\n      />\n    </Container>\n  </Main>\n}\n\nexport default Favorites\n\n","/app/src/pages/recipe-edit/index.js",["534","535","536","537"],[],"import {\n  Container,\n  IngredientsSearch,\n  FileInput,\n  Input,\n  Title,\n  CheckboxGroup,\n  Main,\n  Form,\n  Button,\n  Textarea,\n} from \"../../components\";\nimport styles from \"./styles.module.css\";\nimport api from \"../../api\";\nimport { useEffect, useState } from \"react\";\nimport { useTags } from \"../../utils\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport MetaTags from \"react-meta-tags\";\nimport { Icons } from \"../../components\";\nimport cn from \"classnames\";\n\nconst RecipeEdit = ({ onItemDelete }) => {\n  const { value, handleChange, setValue } = useTags();\n  const [recipeName, setRecipeName] = useState(\"\");\n\n  const [ingredientValue, setIngredientValue] = useState({\n    name: \"\",\n    id: null,\n    amount: \"\",\n    measurement_unit: \"\",\n  });\n\n  const [recipeIngredients, setRecipeIngredients] = useState([]);\n  const [recipeText, setRecipeText] = useState(\"\");\n  const [recipeTime, setRecipeTime] = useState(0);\n  const [recipeFile, setRecipeFile] = useState(null);\n  const [recipeFileWasManuallyChanged, setRecipeFileWasManuallyChanged] =\n    useState(false);\n\n  const [ingredients, setIngredients] = useState([]);\n  const [showIngredients, setShowIngredients] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [submitError, setSubmitError] = useState({ submitError: \"\" });\n  const [ingredientError, setIngredientError] = useState(\"\");\n\n  const history = useHistory();\n\n  const handleAddIngredient = () => {\n    if (\n      ingredientValue.amount === \"\" ||\n      ingredientValue.name === \"\" ||\n      !ingredientValue.id\n    ) {\n      return setIngredientError(\"Ингредиент не выбран\");\n    }\n\n    if (recipeIngredients.find(({ name }) => name === ingredientValue.name)) {\n      return setIngredientError(\"Ингредиент уже выбран\");\n    }\n\n    setRecipeIngredients([...recipeIngredients, ingredientValue]);\n    setIngredientValue({\n      name: \"\",\n      id: null,\n      amount: \"\",\n      measurement_unit: \"\",\n    });\n  };\n\n  useEffect(\n    (_) => {\n      if (ingredientValue.name === \"\") {\n        return setIngredients([]);\n      }\n      api.getIngredients({ name: ingredientValue.name }).then((ingredients) => {\n        setIngredients(ingredients);\n      });\n    },\n    [ingredientValue.name]\n  );\n\n  const { id } = useParams();\n  useEffect(\n    (_) => {\n      if (!loading) {\n        return;\n      }\n      api\n        .getRecipe({\n          recipe_id: id,\n        })\n        .then((res) => {\n          const { image, cooking_time, name, ingredients, text } = res;\n          setRecipeText(text);\n          setRecipeName(name);\n          setRecipeTime(cooking_time);\n          setRecipeFile(image);\n          setRecipeIngredients(ingredients);\n\n          setLoading(false);\n        })\n        .catch((err) => {\n          history.push(\"/recipes\");\n        });\n    },\n    [value]\n  );\n\n  const handleIngredientAutofill = ({ id, name, measurement_unit }) => {\n    setIngredientValue({\n      ...ingredientValue,\n      id,\n      name,\n      measurement_unit,\n    });\n  };\n\n  const checkIfDisabled = () => {\n    if (\n      recipeText === \"\" ||\n      recipeName === \"\" ||\n      recipeIngredients.length === 0 ||\n      recipeTime === \"\" ||\n      recipeFile === \"\" ||\n      recipeFile === null\n    ) {\n      setSubmitError({ submitError: \"Заполните все поля!\" });\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <Main>\n      <Container>\n        <MetaTags>\n          <title>Редактирование рецепта</title>\n          <meta name=\"description\" content=\"Фудграм - Редактирование рецепта\" />\n          <meta property=\"og:title\" content=\"Редактирование рецепта\" />\n        </MetaTags>\n        <Title title=\"Редактирование рецепта\" />\n        <Form\n          className={styles.form}\n          onSubmit={(e) => {\n            e.preventDefault();\n            if (checkIfDisabled()) {\n              return;\n            }\n            const data = {\n              text: recipeText,\n              name: recipeName,\n              ingredients: recipeIngredients.map((item) => ({\n                id: item.id,\n                amount: item.amount,\n              })),\n              cooking_time: recipeTime,\n              image: recipeFile,\n              recipe_id: id,\n            };\n            api\n              .updateRecipe(data, recipeFileWasManuallyChanged)\n              .then((res) => {\n                history.push(`/recipes/${id}`);\n              })\n              .catch((err) => {\n                const { non_field_errors, ingredients, cooking_time } = err;\n                if (non_field_errors) {\n                  return setSubmitError({\n                    submitError: non_field_errors.join(\", \"),\n                  });\n                }\n                if (ingredients) {\n                  return setSubmitError({\n                    submitError: `Ингредиенты: ${\n                      ingredients\n                        .filter((item) => Object.keys(item).length)\n                        .map((item) => {\n                          const error = item[Object.keys(item)[0]];\n                          return error && error.join(\" ,\");\n                        })[0]\n                    }`,\n                  });\n                }\n                if (cooking_time) {\n                  return setSubmitError({\n                    submitError: `Время готовки: ${cooking_time[0]}`,\n                  });\n                }\n                const errors = Object.values(err);\n                if (errors) {\n                  setSubmitError({ submitError: errors.join(\", \") });\n                }\n              });\n          }}\n        >\n          <Input\n            label=\"Название рецепта\"\n            onChange={(e) => {\n              setSubmitError({ submitError: \"\" });\n              setIngredientError(\"\");\n              const value = e.target.value;\n              setRecipeName(value);\n            }}\n            value={recipeName}\n            className={styles.mb36}\n          />\n          <div className={styles.ingredients}>\n            <div className={styles.ingredientsInputs}>\n              <Input\n                label=\"Ингредиенты\"\n                className={styles.ingredientsNameInput}\n                inputClassName={styles.ingredientsInput}\n                labelClassName={styles.ingredientsLabel}\n                placeholder=\"Начните вводить название\"\n                onChange={(e) => {\n                  setSubmitError({ submitError: \"\" });\n                  setIngredientError(\"\");\n                  const value = e.target.value;\n                  setIngredientValue({\n                    ...ingredientValue,\n                    name: value,\n                  });\n                }}\n                onFocus={(_) => {\n                  setShowIngredients(true);\n                }}\n                value={ingredientValue.name}\n              />\n              <div className={styles.ingredientsAmountInputContainer}>\n                <p className={styles.amountText}>в количестве </p>\n                <Input\n                  onKeyDown={(e) => {\n                    if (e.key === \"Enter\") {\n                      e.preventDefault();\n                      handleAddIngredient();\n                    }\n                  }}\n                  className={styles.ingredientsAmountInput}\n                  inputClassName={styles.ingredientsAmountValue}\n                  onChange={(e) => {\n                    setSubmitError({ submitError: \"\" });\n                    setIngredientError(\"\");\n                    const value = e.target.value;\n                    setIngredientValue({\n                      ...ingredientValue,\n                      amount: value,\n                    });\n                  }}\n                  placeholder={0}\n                  value={ingredientValue.amount}\n                  type=\"number\"\n                />\n                {ingredientValue.measurement_unit !== \"\" && (\n                  <div className={styles.measurementUnit}>\n                    {ingredientValue.measurement_unit}\n                  </div>\n                )}\n              </div>\n              {showIngredients && ingredients.length > 0 && (\n                <IngredientsSearch\n                  ingredients={ingredients}\n                  onClick={({ id, name, measurement_unit }) => {\n                    handleIngredientAutofill({ id, name, measurement_unit });\n                    setIngredients([]);\n                    setShowIngredients(false);\n                  }}\n                />\n              )}\n            </div>\n            <div className={styles.ingredientAdd} onClick={handleAddIngredient}>\n              Добавить ингредиент\n            </div>\n            {ingredientError && (\n              <p className={cn(styles.error, styles.errorIngredient)}>\n                {ingredientError}\n              </p>\n            )}\n            <div className={styles.ingredientsAdded}>\n              {recipeIngredients.map((item) => {\n                return (\n                  <div className={styles.ingredientsAddedItem}>\n                    <span className={styles.ingredientsAddedItemTitle}>\n                      {item.name}\n                    </span>{\" \"}\n                    <span>-</span>{\" \"}\n                    <span>\n                      {item.amount}\n                      {item.measurement_unit}\n                    </span>{\" \"}\n                    <span\n                      className={styles.ingredientsAddedItemRemove}\n                      onClick={(_) => {\n                        const recipeIngredientsUpdated =\n                          recipeIngredients.filter((ingredient) => {\n                            return ingredient.id !== item.id;\n                          });\n                        setRecipeIngredients(recipeIngredientsUpdated);\n                      }}\n                    >\n                      <Icons.IngredientDelete />\n                    </span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div\n            className={cn(\n              styles.ingredientsAmountInputContainer,\n              styles.ingredientsAmountInputContainerMob\n            )}\n          >\n            <p className={styles.amountText}>в количестве </p>\n            <Input\n              className={styles.ingredientsAmountInput}\n              inputClassName={styles.ingredientsAmountValue}\n              onChange={(e) => {\n                setSubmitError({ submitError: \"\" });\n                setIngredientError(\"\");\n                const value = e.target.value;\n                setIngredientValue({\n                  ...ingredientValue,\n                  amount: value,\n                });\n              }}\n              placeholder={0}\n              value={ingredientValue.amount}\n            />\n            {ingredientValue.measurement_unit !== \"\" && (\n              <div className={styles.measurementUnit}>\n                {ingredientValue.measurement_unit}\n              </div>\n            )}\n          </div>\n          <div className={styles.cookingTime}>\n            <Input\n              label=\"Время приготовления\"\n              className={styles.ingredientsTimeInput}\n              labelClassName={styles.cookingTimeLabel}\n              inputClassName={styles.ingredientsTimeValue}\n              onChange={(e) => {\n                const value = e.target.value;\n                setRecipeTime(value);\n              }}\n              placeholder=\"0\"\n              value={recipeTime}\n            />\n            <div className={styles.cookingTimeUnit}>мин.</div>\n          </div>\n          <Textarea\n            label=\"Описание рецепта\"\n            onChange={(e) => {\n              const value = e.target.value;\n              setRecipeText(value);\n            }}\n            value={recipeText}\n            placeholder=\"Опишите действия\"\n          />\n          <FileInput\n            onChange={(file) => {\n              setRecipeFileWasManuallyChanged(true);\n              setRecipeFile(file);\n            }}\n            fileTypes={[\"image/png\", \"image/jpeg\"]}\n            fileSize={5000}\n            className={styles.fileInput}\n            label=\"Загрузить фото\"\n            file={recipeFile}\n          />\n          <div className={styles.actions}>\n            <Button\n              modifier=\"style_dark\"\n              type=\"submit\"\n              className={styles.button}\n            >\n              Сохранить\n            </Button>\n            <div\n              className={styles.deleteRecipe}\n              onClick={(_) => {\n                api.deleteRecipe({ recipe_id: id }).then((res) => {\n                  onItemDelete && onItemDelete();\n                  history.push(\"/recipes\");\n                });\n              }}\n            >\n              Удалить\n            </div>\n          </div>\n          {submitError.submitError && (\n            <p className={styles.error}>{submitError.submitError}</p>\n          )}\n        </Form>\n      </Container>\n    </Main>\n  );\n};\n\nexport default RecipeEdit;\n","/app/src/pages/cart/index.js",["538","539"],[],"import { PurchaseList, Title, Container, Main, Button } from '../../components'\nimport styles from './styles.module.css'\nimport { useRecipes } from '../../utils/index.js'\nimport { useEffect, useState } from 'react'\nimport api from '../../api'\nimport MetaTags from 'react-meta-tags'\n\nconst Cart = ({ updateOrders, orders }) => {\n  const {\n    recipes,\n    setRecipes,\n    handleAddToCart\n  } = useRecipes()\n  \n  const getRecipes = () => {\n    api\n      .getRecipes({\n        page: 1,\n        limit: 999,\n        is_in_shopping_cart: Number(true)\n      })\n      .then(res => {\n        const { results } = res\n        setRecipes(results)\n      })\n  }\n\n  useEffect(_ => {\n    getRecipes()\n  }, [])\n\n  const downloadDocument = () => {\n    api.downloadFile()\n  }\n\n  return <Main>\n    <Container className={styles.container}>\n      <MetaTags>\n        <title>Список покупок</title>\n        <meta name=\"description\" content=\"Фудграм - Список покупок\" />\n        <meta property=\"og:title\" content=\"Список покупок\" />\n      </MetaTags>\n      <div className={styles.cart}>\n        <Title title='Список покупок' />\n        <PurchaseList\n          orders={recipes}\n          handleRemoveFromCart={handleAddToCart}\n          updateOrders={updateOrders}\n        />\n        {orders > 0 && <Button\n          modifier='style_dark'\n          clickHandler={downloadDocument}\n        >Скачать список</Button>}\n      </div>\n    </Container>\n  </Main>\n}\n\nexport default Cart\n\n","/app/src/pages/user/index.js",["540","541","542"],[],"import {\n  Card,\n  Title,\n  Pagination,\n  CardList,\n  Button,\n  CheckboxGroup,\n  Container,\n  Main,\n  Icons,\n} from \"../../components\";\nimport cn from \"classnames\";\nimport styles from \"./styles.module.css\";\nimport { useRecipes } from \"../../utils/index.js\";\nimport { useEffect, useState, useContext } from \"react\";\nimport api from \"../../api\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { AuthContext, UserContext } from \"../../contexts\";\nimport MetaTags from \"react-meta-tags\";\nimport DefaultImage from \"../../images/userpic-icon.jpg\";\n\nconst UserPage = ({ updateOrders }) => {\n  const {\n    recipes,\n    setRecipes,\n    recipesCount,\n    setRecipesCount,\n    recipesPage,\n    setRecipesPage,\n    handleLike,\n    handleAddToCart,\n  } = useRecipes();\n  const { id } = useParams();\n  const [user, setUser] = useState(null);\n  const [subscribed, setSubscribed] = useState(false);\n  const history = useHistory();\n  const userContext = useContext(UserContext);\n  const authContext = useContext(AuthContext);\n\n  const getRecipes = ({ page = 1 }) => {\n    api.getRecipes({ page, author: id }).then((res) => {\n      const { results, count } = res;\n      setRecipes(results);\n      setRecipesCount(count);\n    });\n  };\n\n  const getUser = () => {\n    api\n      .getUser({ id })\n      .then((res) => {\n        setUser(res);\n        setSubscribed(res.is_subscribed);\n      })\n      .catch((err) => {\n        history.push(\"/not-found\");\n      });\n  };\n\n  useEffect(\n    (_) => {\n      if (!user) {\n        return;\n      }\n      getRecipes({ page: recipesPage, author: user.id });\n    },\n    [recipesPage, user]\n  );\n\n  useEffect((_) => {\n    getUser();\n  }, []);\n\n  return (\n    <Main>\n      <Container className={styles.container}>\n        <MetaTags>\n          <title>\n            {user\n              ? `${user.first_name} ${user.last_name}`\n              : \"Страница пользователя\"}\n          </title>\n          <meta\n            name=\"description\"\n            content={\n              user\n                ? `Фудграм - ${user.first_name} ${user.last_name}`\n                : \"Фудграм - Страница пользователя\"\n            }\n          />\n          <meta\n            property=\"og:title\"\n            content={\n              user\n                ? `${user.first_name} ${user.last_name}`\n                : \"Страница пользователя\"\n            }\n          />\n        </MetaTags>\n        <div className={styles.title}>\n          <div className={styles.titleTextBox}>\n            <div className={styles.user}>\n              <div\n                className={styles.userAvatar}\n                style={{\n                  \"background-image\": `url(${\n                    (user && user.avatar) || DefaultImage\n                  })`,\n                }}\n              />\n              <Title\n                className={cn({\n                  [styles.titleText]: true,\n                })}\n                title={user ? `${user.first_name} ${user.last_name}` : \"\"}\n              />\n            </div>\n\n            {(userContext || {}).id !== (user || {}).id && authContext && (\n              <Button\n                className={cn(styles.buttonSubscribe, {\n                  [styles.buttonSubscribeActive]: subscribed,\n                })}\n                modifier={subscribed ? \"style_dark\" : \"style_light\"}\n                clickHandler={(_) => {\n                  const method = subscribed\n                    ? api.deleteSubscriptions.bind(api)\n                    : api.subscribe.bind(api);\n                  method({\n                    author_id: id,\n                  }).then((_) => {\n                    setSubscribed(!subscribed);\n                  });\n                }}\n              >\n                <Icons.AddUser />{\" \"}\n                {subscribed ? \"Отписаться от автора\" : \"Подписаться на автора\"}\n              </Button>\n            )}\n          </div>\n        </div>\n\n        {recipes.length > 0 && (\n          <CardList>\n            {recipes.map((card) => (\n              <Card\n                {...card}\n                key={card.id}\n                updateOrders={updateOrders}\n                handleLike={handleLike}\n                handleAddToCart={handleAddToCart}\n              />\n            ))}\n          </CardList>\n        )}\n        <Pagination\n          count={recipesCount}\n          limit={6}\n          page={recipesPage}\n          onPageChange={(page) => setRecipesPage(page)}\n        />\n      </Container>\n    </Main>\n  );\n};\n\nexport default UserPage;\n","/app/src/components/header/index.js",["543"],[],"import styles from './style.module.css'\nimport { Nav, AccountMenu, LinkComponent } from '../index.js'\nimport Container from '../container'\nimport LogoHeader from '../../images/logo-header.png'\n\nconst Header = ({ loggedIn, onSignOut, orders }) => {\n  return <header className={styles.header}>\n    <Container>\n      <div className={styles.headerContent}>\n        <LinkComponent\n          className={styles.headerLink}\n          title={<img className={styles.headerLogo} src={LogoHeader} alt='Foodgram' />}\n          href='/'\n        />\n        <Nav\n          loggedIn={loggedIn}\n          onSignOut={onSignOut}\n          orders={orders}\n        />\n      </div>\n    </Container>\n  </header>\n}\n\nexport default Header\n","/app/src/components/button/index.js",[],[],"/app/src/components/tag/index.js",[],[],"/app/src/components/main/index.js",[],[],"/app/src/components/container/index.js",[],[],"/app/src/pages/single-card/index.js",["544","545"],[],"import { Tooltip } from \"react-tooltip\";\nimport {\n  Container,\n  Main,\n  Button,\n  Icons,\n  LinkComponent,\n} from \"../../components\";\nimport { UserContext, AuthContext } from \"../../contexts\";\nimport { useContext, useState, useEffect } from \"react\";\nimport styles from \"./styles.module.css\";\nimport Ingredients from \"./ingredients\";\nimport Description from \"./description\";\nimport cn from \"classnames\";\nimport { useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport MetaTags from \"react-meta-tags\";\nimport DefaultImage from \"../../images/userpic-icon.jpg\";\nimport { useRecipe } from \"../../utils/index.js\";\nimport api from \"../../api\";\nimport { Notification } from \"../../components/notification\";\n\nconst SingleCard = ({ loadItem, updateOrders }) => {\n  const [loading, setLoading] = useState(true);\n  const [notificationPosition, setNotificationPosition] = useState(\"-100%\");\n  const [notificationError, setNotificationError] = useState({\n    text: \"\",\n    position: \"-100%\",\n  });\n  const { recipe, setRecipe, handleLike, handleAddToCart, handleSubscribe } =\n    useRecipe();\n  const authContext = useContext(AuthContext);\n  const userContext = useContext(UserContext);\n  const { id } = useParams();\n  const history = useHistory();\n\n  const handleCopyLink = () => {\n    api\n      .copyRecipeLink({ id })\n      .then(({ \"short-link\": shortLink }) => {\n        navigator.clipboard\n          .writeText(shortLink)\n          .then(() => {\n            setNotificationPosition(\"40px\");\n            setTimeout(() => {\n              setNotificationPosition(\"-100%\");\n            }, 3000);\n          })\n          .catch(() => {\n            /**\n             * В Safari не работает запись в буфер внутри асинхронного запроса,\n             * поэтому добавил отдельную плашку на этот случай\n             */\n            setNotificationError({\n              text: `Ваша ссылка: ${shortLink}`,\n              position: \"40px\",\n            });\n          });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleErrorClose = () => {\n    setNotificationError((prev) => ({ ...prev, position: \"-100%\" }));\n  };\n\n  useEffect((_) => {\n    api\n      .getRecipe({\n        recipe_id: id,\n      })\n      .then((res) => {\n        setRecipe(res);\n        setLoading(false);\n      })\n      .catch((err) => {\n        history.push(\"/not-found\");\n      });\n  }, []);\n\n  const { url } = useRouteMatch();\n  const {\n    author = {},\n    image,\n    cooking_time,\n    name,\n    ingredients,\n    text,\n    is_favorited,\n    is_in_shopping_cart,\n  } = recipe;\n\n  return (\n    <Main>\n      <Container>\n        <MetaTags>\n          <title>{name}</title>\n          <meta name=\"description\" content={`Фудграм - ${name}`} />\n          <meta property=\"og:title\" content={name} />\n        </MetaTags>\n        <div className={styles[\"single-card\"]}>\n          <img\n            src={image}\n            alt={name}\n            className={styles[\"single-card__image\"]}\n          />\n          <div className={styles[\"single-card__info\"]}>\n            <div className={styles[\"single-card__header-info\"]}>\n              <h1 className={styles[\"single-card__title\"]}>{name}</h1>\n              <div className={styles.btnsBox}>\n                <Button\n                  modifier=\"style_none\"\n                  clickHandler={handleCopyLink}\n                  className={cn(styles[\"single-card__save-button\"])}\n                  data-tooltip-id=\"tooltip-copy\"\n                  data-tooltip-content=\"Скопировать прямую ссылку на рецепт\"\n                  data-tooltip-place=\"top\"\n                >\n                  <Icons.CopyLinkIcon />\n                </Button>\n                <Tooltip id=\"tooltip-copy\" />\n                {authContext && (\n                  <>\n                    <Button\n                      modifier=\"style_none\"\n                      clickHandler={(_) => {\n                        handleLike({ id, toLike: Number(!is_favorited) });\n                      }}\n                      className={cn(styles[\"single-card__save-button\"], {\n                        [styles[\"single-card__save-button_active\"]]:\n                          is_favorited,\n                      })}\n                      data-tooltip-id=\"tooltip-save\"\n                      data-tooltip-content={\n                        is_favorited\n                          ? \"Удалить из избранного\"\n                          : \"Добавить в избранное\"\n                      }\n                      data-tooltip-place=\"bottom\"\n                    >\n                      <Icons.LikeIcon />\n                    </Button>\n                    <Tooltip id=\"tooltip-save\" />\n                  </>\n                )}\n              </div>\n            </div>\n\n            <div className={styles[\"single-card__extra-info\"]}>\n              <p className={styles[\"single-card__text\"]}>{cooking_time} мин.</p>\n              <p className={styles[\"single-card__text_with_link\"]}>\n                <div className={styles[\"single-card__text\"]}>\n                  <div\n                    className={styles[\"single-card__user-avatar\"]}\n                    style={{\n                      \"background-image\": `url(${\n                        author.avatar || DefaultImage\n                      })`,\n                    }}\n                  />\n                  <LinkComponent\n                    title={`${author.first_name} ${author.last_name}`}\n                    href={`/user/${author.id}`}\n                    className={styles[\"single-card__link\"]}\n                  />\n                </div>\n              </p>\n              {(userContext || {}).id !== author.id && authContext && (\n                <>\n                  <Button\n                    className={cn(\n                      styles[\"single-card__button\"],\n                      styles[\"single-card__button_add-user\"],\n                      {\n                        [styles[\"single-card__button_add-user_active\"]]:\n                          author.is_subscribed,\n                      }\n                    )}\n                    modifier={\n                      author.is_subscribed ? \"style_dark\" : \"style_light\"\n                    }\n                    clickHandler={(_) => {\n                      handleSubscribe({\n                        author_id: author.id,\n                        toSubscribe: !author.is_subscribed,\n                      });\n                    }}\n                    data-tooltip-id=\"tooltip-subscribe\"\n                    data-tooltip-content={\n                      author.is_subscribed\n                        ? \"Отписаться от автора\"\n                        : \"Подписаться на автора\"\n                    }\n                    data-tooltip-place=\"bottom\"\n                  >\n                    <Icons.AddUser />\n                  </Button>\n                  <Tooltip id=\"tooltip-subscribe\" />\n                </>\n              )}\n            </div>\n            <div className={styles[\"single-card__buttons\"]}>\n              {authContext && (\n                <Button\n                  className={cn(\n                    styles[\"single-card__button\"],\n                    styles[\"single-card__button_add-receipt\"]\n                  )}\n                  modifier=\"style_dark\"\n                  clickHandler={(_) => {\n                    handleAddToCart({\n                      id,\n                      toAdd: Number(!is_in_shopping_cart),\n                      callback: updateOrders,\n                    });\n                  }}\n                >\n                  {is_in_shopping_cart ? (\n                    <>\n                      <Icons.CheckIcon />\n                      Рецепт добавлен\n                    </>\n                  ) : (\n                    <>\n                      <Icons.PlusIcon /> Добавить в покупки\n                    </>\n                  )}\n                </Button>\n              )}\n              {authContext && (userContext || {}).id === author.id && (\n                <Button\n                  href={`${url}/edit`}\n                  className={styles[\"single-card__edit\"]}\n                >\n                  Редактировать рецепт\n                </Button>\n              )}\n            </div>\n            <Ingredients ingredients={ingredients} />\n            <Description description={text} />\n          </div>\n        </div>\n        <Notification\n          text=\"Ссылка скопирована\"\n          style={{ right: notificationPosition }}\n        />\n        <Notification\n          text={notificationError.text}\n          style={{ right: notificationError.position }}\n          onClose={handleErrorClose}\n        />\n      </Container>\n    </Main>\n  );\n};\n\nexport default SingleCard;\n","/app/src/components/icons/index.js",["546"],[],"import StarIcon from \"./star\";\nimport StarActiveIcon from \"./star-active\";\nimport LikeIcon from \"./like\";\nimport LikeActiveIcon from \"./like-active\";\nimport ClockIcon from \"./clock\";\nimport UserIcon from \"./user\";\nimport CheckIcon from \"./check\";\nimport ArrowLeftIcon from \"./arrow-left\";\nimport ArrowRightIcon from \"./arrow-right\";\nimport PlusIcon from \"./plus\";\nimport DoneIcon from \"./done\";\nimport IngredientDelete from \"./ingredient-delete\";\nimport SavedMenu from \"./saved-menu\";\nimport SubscriptionsMenu from \"./subscriptions-menu\";\nimport LogoutMenu from \"./logout-menu\";\nimport ResetPasswordMenu from \"./reset-password-menu\";\nimport Cart from \"./cart\";\nimport AddUser from \"./add-user\";\nimport ReceiptDelete from \"./receipt-delete\";\nimport ArrowExpand from \"./arrow-expand\";\nimport PaginationArrow from \"./pagination-arrow\";\nimport PopupClose from \"./popup-close\";\nimport AddAvatarIcon from \"./add-avatar\";\nimport DeleteAvatarIcon from \"./delete-avatar\";\nimport CopyLinkIcon from \"./copy-link\";\n\nexport default {\n  StarIcon,\n  ReceiptDelete,\n  PopupClose,\n  Cart,\n  StarActiveIcon,\n  AddUser,\n  ClockIcon,\n  UserIcon,\n  PaginationArrow,\n  CheckIcon,\n  ArrowLeftIcon,\n  IngredientDelete,\n  ArrowRightIcon,\n  PlusIcon,\n  DoneIcon,\n  LikeIcon,\n  LikeActiveIcon,\n  ArrowExpand,\n  SavedMenu,\n  SubscriptionsMenu,\n  LogoutMenu,\n  ResetPasswordMenu,\n  AddAvatarIcon,\n  DeleteAvatarIcon,\n  CopyLinkIcon,\n};\n","/app/src/pages/signup/index.js",[],[],"/app/src/pages/not-found/index.js",[],[],"/app/src/pages/change-password/index.js",["547","548","549"],[],"import {\n  Container,\n  Input,\n  FormTitle,\n  Main,\n  Form,\n  Button,\n} from \"../../components\";\nimport styles from \"./styles.module.css\";\nimport { useFormWithValidation } from \"../../utils\";\nimport { AuthContext } from \"../../contexts\";\nimport { Redirect } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport { ChangePasswordText } from \"../../components/change-password-text\";\n\nconst ChangePassword = ({ onPasswordChange, submitError, setSubmitError }) => {\n  const { values, handleChange, errors, isValid, resetForm } =\n    useFormWithValidation();\n  const authContext = useContext(AuthContext);\n\n  const onChange = (e) => {\n    setSubmitError({ submitError: \"\" });\n    handleChange(e);\n  };\n\n  return (\n    <Main withBG asFlex>\n      <Container className={styles.center}>\n        <MetaTags>\n          <title>Изменить пароль</title>\n          <meta\n            name=\"description\"\n            content=\"Фудграм - Изменить пароль\"\n          />\n          <meta property=\"og:title\" content=\"Изменить пароль\" />\n        </MetaTags>\n        <Form\n          className={styles.form}\n          onSubmit={(e) => {\n            e.preventDefault();\n            onPasswordChange(values);\n          }}\n        >\n          <FormTitle>Изменить пароль</FormTitle>\n          <Input\n            required\n            isAuth={true}\n            placeholder=\"Старый пароль\"\n            type=\"password\"\n            name=\"current_password\"\n            error={errors}\n            onChange={onChange}\n          />\n          <Input\n            required\n            isAuth={true}\n            placeholder=\"Новый пароль\"\n            type=\"password\"\n            name=\"new_password\"\n            error={errors}\n            onChange={onChange}\n          />\n          <ul className={styles.texts}>\n            <li className={styles.text}>\n              <ChangePasswordText text=\"Ваш пароль не должен совпадать с вашим именем или другой персональной информацией или быть слишком похожим на неё\" />\n            </li>\n            <li className={styles.text}>\n              <ChangePasswordText text=\"Ваш пароль должен содержать как минимум 8 символов\" />\n            </li>\n            <li className={styles.text}>\n              <ChangePasswordText text=\"Ваш пароль не может быть одним из широко распространённых паролей\" />\n            </li>\n            <li className={styles.text}>\n              <ChangePasswordText text=\"Ваш пароль не может состоять только из цифр\" />\n            </li>\n          </ul>\n          <Input\n            required\n            isAuth={true}\n            placeholder=\"Подтвердите новый пароль\"\n            type=\"password\"\n            name=\"repeat_password\"\n            error={errors}\n            submitError={submitError}\n            onChange={onChange}\n          />\n          <Button\n            modifier=\"style_dark\"\n            type=\"submit\"\n            className={styles.button}\n            disabled={\n              !isValid || values.new_password !== values.repeat_password\n            }\n          >\n            Изменить пароль\n          </Button>\n        </Form>\n      </Container>\n    </Main>\n  );\n};\n\nexport default ChangePassword;\n","/app/src/components/tags-container/index.js",[],[],"/app/src/components/input/index.js",["550","551"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\nimport cn from \"classnames\";\n\nconst Input = ({\n  onChange,\n  placeholder,\n  label,\n  type = \"text\",\n  inputClassName,\n  labelClassName,\n  className,\n  name,\n  required,\n  onFocus,\n  onBlur,\n  isAuth,\n  error,\n  submitError,\n  value = \"\",\n  ...rest\n}) => {\n  const [inputValue, setInputValue] = useState(value);\n\n  const errorText = (error && error[name]) || submitError?.submitError;\n\n  const handleValueChange = (e) => {\n    const value = e.target.value;\n    setInputValue(value);\n    onChange(e);\n  };\n  useEffect(() => {\n    if (value !== inputValue) {\n      setInputValue(value);\n    }\n  }, [value]);\n\n  return (\n    <div className={cn(styles.input, className)}>\n      <label className={cn(styles.inputLabel, { [styles.auth]: isAuth })}>\n        {label && (\n          <div className={cn(styles.inputLabelText, labelClassName)}>\n            {label}\n          </div>\n        )}\n        <input\n          type={type}\n          placeholder={placeholder}\n          required={required}\n          name={name}\n          className={cn(styles.inputField, inputClassName, {\n            [styles.inputError]: errorText,\n          })}\n          onChange={(e) => {\n            handleValueChange(e);\n          }}\n          onFocus={onFocus}\n          value={inputValue}\n          onBlur={onBlur}\n          {...rest}\n        />\n        {errorText && (\n          <div className={styles.errorBox}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"15\"\n              height=\"14\"\n              viewBox=\"0 0 15 14\"\n              fill=\"none\"\n            >\n              <g clip-path=\"url(#clip0_101_848)\">\n                <circle cx=\"7.5\" cy=\"7\" r=\"7\" fill=\"#FF3B30\" />\n                <path\n                  d=\"M5.85008 5.35011L7.5 7.00003M7.5 7.00003L9.14992 8.64994M7.5 7.00003L5.85008 8.64994M7.5 7.00003L9.14992 5.35011\"\n                  stroke=\"white\"\n                  stroke-width=\"1.2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                />\n              </g>\n              <defs>\n                <clipPath id=\"clip0_101_848\">\n                  <rect\n                    width=\"14\"\n                    height=\"14\"\n                    fill=\"white\"\n                    transform=\"translate(0.5)\"\n                  />\n                </clipPath>\n              </defs>\n            </svg>\n            <p className={styles.error}>{errorText}</p>\n          </div>\n        )}\n      </label>\n    </div>\n  );\n};\n\nexport default Input;\n","/app/src/pages/subscriptions/index.js",["552"],[],"import { Title, Pagination, Container, Main, SubscriptionList  } from '../../components'\nimport { useSubscriptions } from '../../utils'\nimport api from '../../api'\nimport { useEffect } from 'react'\nimport MetaTags from 'react-meta-tags'\n\nconst SubscriptionsPage = () => {\n  const {\n    subscriptions,\n    setSubscriptions,\n    subscriptionsCount,\n    setSubscriptionsCount,\n    removeSubscription,\n    subscriptionsPage,\n    setSubscriptionsPage\n  } = useSubscriptions()\n\n  const getSubscriptions = ({ page }) => {\n    api\n      .getSubscriptions({ page })\n      .then(res => {\n        setSubscriptions(res.results)\n        setSubscriptionsCount(res.count)\n      })\n  }\n\n  useEffect(_ => {\n    getSubscriptions({ page: subscriptionsPage })\n  }, [subscriptionsPage])\n\n\n  return <Main>\n    <Container>\n      <MetaTags>\n        <title>Мои подписки</title>\n        <meta name=\"description\" content=\"Фудграм - Мои подписки\" />\n        <meta property=\"og:title\" content=\"Мои подписки\" />\n      </MetaTags>\n      <Title\n        title='Мои подписки'\n      />\n      <SubscriptionList\n        subscriptions={subscriptions}\n        removeSubscription={removeSubscription}\n      />\n      <Pagination\n        count={subscriptionsCount}\n        limit={6}\n        onPageChange={page => {\n          setSubscriptionsPage(page)\n        }}\n      />\n    </Container>\n  </Main>\n}\n\nexport default SubscriptionsPage","/app/src/components/nav/index.js",["553"],[],"import styles from './style.module.css'\nimport { useEffect, useState } from 'react'\nimport { AccountMenu, Orders, NavMenu, AccountMenuMobile, LinkComponent } from '../index.js'\nimport cn from 'classnames'\nimport { useLocation } from 'react-router-dom'\nimport hamburgerImg from '../../images/hamburger-menu.png'\nimport hamburgerImgClose from '../../images/hamburger-menu-close.png'\n\nconst Nav = ({ loggedIn, onSignOut, orders }) => {\n\n  const [ menuToggled, setMenuToggled ] = useState(false)\n  const location = useLocation()\n  \n  useEffect(() => {\n    const cb = () => {\n      setMenuToggled(false)\n    }\n    window.addEventListener('resize', cb)\n\n    return () => window.removeEventListener('resize', cb)\n  }, [])\n\n  useEffect(() => {\n    setMenuToggled(false)\n  }, [location.pathname])\n\n  return <div className={styles.nav}>\n    <LinkComponent href=\"/cart\" className={styles.nav__orders} title={<Orders orders={orders} />} />\n\n    <div\n      className={styles.menuButton}\n      onClick={_ => setMenuToggled(!menuToggled)}\n    >\n      <img src={menuToggled ? hamburgerImgClose : hamburgerImg} />\n    </div>\n    <div className={styles.nav__container}>\n      <NavMenu loggedIn={loggedIn} />\n      <AccountMenu onSignOut={onSignOut} orders={orders} />\n    </div>\n\n    <div className={cn(styles['nav__container-mobile'], {\n      [styles['nav__container-mobile_visible']]: menuToggled\n    })}>\n      <NavMenu loggedIn={loggedIn} />\n      <AccountMenuMobile onSignOut={onSignOut} orders={orders} />\n    </div>\n  </div>\n}\n\nexport default Nav\n","/app/src/pages/update-avatar/index.js",["554","555"],[],"import { Container, FormTitle, Main, Form, Button, FileInput } from '../../components'\nimport styles from './styles.module.css'\nimport { useHistory } from 'react-router-dom'\nimport { useContext, useState } from 'react'\nimport { AuthContext, UserContext } from '../../contexts'\nimport MetaTags from 'react-meta-tags'\n\nconst UpdateAvatar = ({\n  onAvatarChange\n}) => {\n  const userContext = useContext(UserContext)\n  \n  const [ avatarFile, setAvatarFile ] = useState(userContext.avatar || null)\n  const [ updated, setUpdated ] = useState(false)\n\n  const checkIfDisabled = () => {\n    return avatarFile === '' ||\n    avatarFile === null || \n    !updated\n  }\n\n  return <Main withBG asFlex>\n    <Container className={styles.center}>\n      <MetaTags>\n        <title>Регистрация</title>\n        <meta name=\"description\" content=\"Фудграм - Редактирование аватара\" />\n        <meta property=\"og:title\" content=\"Редактирование аватара\" />\n      </MetaTags>\n      <Form\n        className={styles.form}\n        onSubmit={e => {\n          e.preventDefault()\n          if (checkIfDisabled()) {\n            return alert('Аватар не выбран или не заменен')\n          }\n          onAvatarChange({ file: avatarFile })\n        }}>\n        <FormTitle>Аватар</FormTitle>\n        <FileInput\n          onChange={file => {\n            setUpdated(true)\n            setAvatarFile(file)\n          }}\n          fileTypes={[\"image/png\", \"image/jpeg\"]}\n          fileSize={5000}\n          className={styles.fileInput}\n          file={avatarFile}\n        />\n        <Button\n          modifier='style_dark'\n          type='submit'\n          className={styles.button}\n        >\n          Обновить аватар\n        </Button>\n      </Form>\n    </Container>\n  </Main>\n}\n\nexport default UpdateAvatar\n","/app/src/pages/recipe-create/index.js",["556","557"],[],"import {\n  Container,\n  IngredientsSearch,\n  FileInput,\n  Input,\n  Title,\n  CheckboxGroup,\n  Main,\n  Form,\n  Button,\n  Textarea,\n} from \"../../components\";\nimport styles from \"./styles.module.css\";\nimport api from \"../../api\";\nimport { useEffect, useState } from \"react\";\nimport { useTags } from \"../../utils\";\nimport { useHistory } from \"react-router-dom\";\nimport MetaTags from \"react-meta-tags\";\nimport { Icons } from \"../../components\";\nimport cn from \"classnames\";\n\nconst RecipeCreate = ({ onEdit }) => {\n  const [recipeName, setRecipeName] = useState(\"\");\n  const history = useHistory();\n  const [ingredientValue, setIngredientValue] = useState({\n    name: \"\",\n    id: null,\n    amount: \"\",\n    measurement_unit: \"\",\n  });\n  const [recipeIngredients, setRecipeIngredients] = useState([]);\n  const [recipeText, setRecipeText] = useState(\"\");\n  const [recipeTime, setRecipeTime] = useState(\"\");\n  const [recipeFile, setRecipeFile] = useState(null);\n\n  const [ingredients, setIngredients] = useState([]);\n  const [showIngredients, setShowIngredients] = useState(false);\n  const [submitError, setSubmitError] = useState({ submitError: \"\" });\n  const [ingredientError, setIngredientError] = useState(\"\");\n\n  const handleAddIngredient = () => {\n    if (\n      ingredientValue.amount !== \"\" &&\n      !/^\\d+$/.test(ingredientValue.amount)\n    ) {\n      return setIngredientError(\"Количество ингредиента должно быть целым числом\");\n    }\n\n    if (\n      ingredientValue.amount === \"\" ||\n      ingredientValue.name === \"\" ||\n      !ingredientValue.id\n    ) {\n      return setIngredientError(\"Ингредиент не выбран\");\n    }\n\n    if (recipeIngredients.find(({ name }) => name === ingredientValue.name)) {\n      return setIngredientError(\"Ингредиент уже выбран\");\n    }\n\n    setRecipeIngredients([...recipeIngredients, ingredientValue]);\n    setIngredientValue({\n      name: \"\",\n      id: null,\n      amount: \"\",\n      measurement_unit: \"\",\n    });\n  };\n\n  useEffect(\n    (_) => {\n      if (ingredientValue.name === \"\") {\n        return setIngredients([]);\n      }\n      api.getIngredients({ name: ingredientValue.name }).then((ingredients) => {\n        setIngredients(ingredients);\n      });\n    },\n    [ingredientValue.name]\n  );\n\n  const handleIngredientAutofill = ({ id, name, measurement_unit }) => {\n    setIngredientValue({\n      ...ingredientValue,\n      id,\n      name,\n      measurement_unit,\n    });\n  };\n\n  const checkIfDisabled = () => {\n    if (\n      recipeText === \"\" ||\n      recipeName === \"\" ||\n      recipeIngredients.length === 0 ||\n      recipeTime === \"\" ||\n      recipeFile === \"\" ||\n      recipeFile === null\n    ) {\n      setSubmitError({ submitError: \"Заполните все поля!\" });\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <Main>\n      <Container>\n        <MetaTags>\n          <title>Создание рецепта</title>\n          <meta name=\"description\" content=\"Фудграм - Создание рецепта\" />\n          <meta property=\"og:title\" content=\"Создание рецепта\" />\n        </MetaTags>\n        <Title title=\"Создание рецепта\" />\n        <Form\n          className={styles.form}\n          onSubmit={(e) => {\n            e.preventDefault();\n            if (checkIfDisabled()) {\n              return;\n            }\n            const data = {\n              text: recipeText,\n              name: recipeName,\n              ingredients: recipeIngredients.map((item) => ({\n                id: item.id,\n                amount: item.amount,\n              })),\n              cooking_time: recipeTime,\n              image: recipeFile,\n            };\n            api\n              .createRecipe(data)\n              .then((res) => {\n                history.push(`/recipes/${res.id}`);\n              })\n              .catch((err) => {\n                const { non_field_errors, ingredients, cooking_time } = err;\n                if (non_field_errors) {\n                  return setSubmitError({\n                    submitError: non_field_errors.join(\", \"),\n                  });\n                }\n                if (ingredients) {\n                  return setSubmitError({\n                    submitError: `Ингредиенты: ${\n                      ingredients\n                        .filter((item) => Object.keys(item).length)\n                        .map((item) => {\n                          const error = item[Object.keys(item)[0]];\n                          return error && error.join(\" ,\");\n                        })[0]\n                    }`,\n                  });\n                }\n                if (cooking_time) {\n                  return setSubmitError({\n                    submitError: `Время готовки: ${cooking_time[0]}`,\n                  });\n                }\n                const errors = Object.values(err);\n                if (errors) {\n                  setSubmitError({ submitError: errors.join(\", \") });\n                }\n              });\n          }}\n        >\n          <Input\n            label=\"Название рецепта\"\n            onChange={(e) => {\n              setSubmitError({ submitError: \"\" });\n              setIngredientError(\"\");\n              const value = e.target.value;\n              setRecipeName(value);\n            }}\n            className={styles.mb36}\n          />\n          <div className={styles.ingredients}>\n            <div className={styles.ingredientsInputs}>\n              <Input\n                label=\"Ингредиенты\"\n                className={styles.ingredientsNameInput}\n                inputClassName={styles.ingredientsInput}\n                placeholder=\"Начните вводить название\"\n                labelClassName={styles.ingredientsLabel}\n                onChange={(e) => {\n                  setSubmitError({ submitError: \"\" });\n                  setIngredientError(\"\");\n                  const value = e.target.value;\n                  setIngredientValue({\n                    ...ingredientValue,\n                    name: value,\n                  });\n                }}\n                onFocus={(_) => {\n                  setShowIngredients(true);\n                }}\n                value={ingredientValue.name}\n              />\n              <div className={styles.ingredientsAmountInputContainer}>\n                <p className={styles.amountText}>в количестве </p>\n                <Input\n                  onKeyDown={(e) => {\n                    if (e.key === \"Enter\") {\n                      e.preventDefault();\n                      handleAddIngredient();\n                    }\n                  }}\n                  className={styles.ingredientsAmountInput}\n                  inputClassName={styles.ingredientsAmountValue}\n                  onChange={(e) => {\n                    setSubmitError({ submitError: \"\" });\n                    setIngredientError(\"\");\n                    const value = e.target.value;\n                    setIngredientValue({\n                      ...ingredientValue,\n                      amount: value,\n                    });\n                  }}\n                  placeholder={0}\n                  value={ingredientValue.amount}\n                  type=\"number\"\n                />\n                {ingredientValue.measurement_unit !== \"\" && (\n                  <div className={styles.measurementUnit}>\n                    {ingredientValue.measurement_unit}\n                  </div>\n                )}\n              </div>\n              {showIngredients && ingredients.length > 0 && (\n                <IngredientsSearch\n                  ingredients={ingredients}\n                  onClick={({ id, name, measurement_unit }) => {\n                    handleIngredientAutofill({ id, name, measurement_unit });\n                    setIngredients([]);\n                    setShowIngredients(false);\n                  }}\n                />\n              )}\n            </div>\n            <div className={styles.ingredientAdd} onClick={handleAddIngredient}>\n              Добавить ингредиент\n            </div>\n            {ingredientError && (\n              <p className={cn(styles.error, styles.errorIngredient)}>\n                {ingredientError}\n              </p>\n            )}\n            <div className={styles.ingredientsAdded}>\n              {recipeIngredients.map((item) => {\n                return (\n                  <div className={styles.ingredientsAddedItem}>\n                    <span className={styles.ingredientsAddedItemTitle}>\n                      {item.name}\n                    </span>\n                    <span>, </span>{\" \"}\n                    <span>\n                      {item.amount}\n                      {item.measurement_unit}\n                    </span>{\" \"}\n                    <span\n                      className={styles.ingredientsAddedItemRemove}\n                      onClick={(_) => {\n                        const recipeIngredientsUpdated =\n                          recipeIngredients.filter((ingredient) => {\n                            return ingredient.id !== item.id;\n                          });\n                        setRecipeIngredients(recipeIngredientsUpdated);\n                      }}\n                    >\n                      <Icons.IngredientDelete />\n                    </span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div className={styles.cookingTime}>\n            <Input\n              label=\"Время приготовления\"\n              className={styles.ingredientsTimeInput}\n              labelClassName={styles.cookingTimeLabel}\n              inputClassName={styles.ingredientsTimeValue}\n              onChange={(e) => {\n                const value = e.target.value;\n                setRecipeTime(value);\n              }}\n              value={recipeTime}\n              placeholder=\"0\"\n            />\n            <div className={styles.cookingTimeUnit}>мин.</div>\n          </div>\n          <Textarea\n            label=\"Описание рецепта\"\n            onChange={(e) => {\n              const value = e.target.value;\n              setRecipeText(value);\n            }}\n            placeholder=\"Опишите действия\"\n          />\n          <FileInput\n            onChange={(file) => {\n              setRecipeFile(file);\n            }}\n            fileTypes={[\"image/png\", \"image/jpeg\"]}\n            fileSize={5000}\n            className={styles.fileInput}\n            label=\"Загрузить фото\"\n          />\n          <Button modifier=\"style_dark\" type=\"submit\" className={styles.button}>\n            Создать рецепт\n          </Button>\n          {submitError.submitError && (\n            <p className={styles.error}>{submitError.submitError}</p>\n          )}\n        </Form>\n      </Container>\n    </Main>\n  );\n};\n\nexport default RecipeCreate;\n","/app/src/pages/password-reset/index.js",["558","559"],[],"import { Container, Input, Main, Form, Button, FormTitle } from '../../components'\nimport styles from './styles.module.css'\nimport { useFormWithValidation } from '../../utils'\nimport MetaTags from 'react-meta-tags'\nimport { AuthContext } from '../../contexts'\nimport { useContext } from 'react'\nimport { Redirect } from 'react-router-dom'\n\nconst ResetPassword = ({ onPasswordReset }) => {\n  const { values, handleChange, isValid, resetForm } = useFormWithValidation()\n  const authContext = useContext(AuthContext)\n\n  {authContext && <Redirect to='/recipes' />}\n\n  return <Main withBG asFlex>\n    <Container className={styles.center}>\n      <MetaTags>\n        <title>Войти на сайт</title>\n        <meta name=\"description\" content=\"Фудграм - Сброс пароля\" />\n        <meta property=\"og:title\" content=\"Сброс пароля\" />\n      </MetaTags>\n      <Form\n        className={styles.form}\n        onSubmit={e => {\n          e.preventDefault()\n          onPasswordReset(values)\n        }}\n      >\n        <FormTitle>Сброс пароля</FormTitle>\n\n        <Input\n          required\n          name='email'\n          placeholder='Email'\n          onChange={handleChange}\n        />\n        <Button\n          modifier='style_dark'\n          disabled={!isValid}\n          type='submit'\n          className={styles.button}\n        >\n          Сбросить\n        </Button>\n      </Form>\n    </Container>\n  </Main>\n}\n\nexport default ResetPassword\n","/app/src/components/link/index.js",[],[],"/app/src/components/account-menu-mobile/index.js",[],[],"/app/src/components/account-mobile/index.js",[],[],"/app/src/components/account-menu/index.js",[],[],"/app/src/components/card/index.js",[],[],"/app/src/components/pagination/index.js",["560"],[],"import styles from './styles.module.css'\nimport cn from 'classnames'\nimport { useState, useEffect } from 'react'\nimport { Icons } from '..'\n\nconst Pagination = ({ count = 0, limit = 6, initialActive = 1, onPageChange, page }) => {\n  const [ active, setActive ] = useState(initialActive)\n  const onButtonClick = (active) => {\n    setActive(active)\n    onPageChange(active)\n  }\n  useEffect(_ => {\n    if (page === active) { return }\n    setActive(page)\n  }, [page])\n  const pagesCount = Math.ceil(count / limit)\n  if (count === 0 || pagesCount <= 1) { return null }\n  return <div className={styles.pagination}>\n    <div\n      className={cn(\n        styles.arrow,\n        styles.arrowLeft,\n        {\n          [styles.arrowDisabled]: active === 1\n        }\n      )}\n      onClick={_ => {\n        if (active === 1) { return }\n        onButtonClick(active - 1)\n      }}\n    >\n      <Icons.PaginationArrow />\n    </div>\n    {(new Array(pagesCount)).fill().map((item, idx) => {\n      return <div\n        className={cn(\n          styles.paginationItem, {\n            [styles.paginationItemActive]: idx + 1 === active\n          }\n        )}\n        onClick={_ => onButtonClick(idx + 1)}\n        key={idx}\n      >{idx + 1}</div>\n    })}\n    <div\n      className={cn(\n        styles.arrow,\n        styles.arrowRight,\n        {\n          [styles.arrowDisabled]: active === pagesCount\n        }\n      )}\n      onClick={_ => {\n        if (active === pagesCount) { return }\n        onButtonClick(active + 1)\n      }}\n    >\n      <Icons.PaginationArrow />\n    </div>\n  </div>\n}\n\nexport default Pagination\n","/app/src/components/textarea/index.js",["561","562"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\nimport cn from \"classnames\";\n\nconst Textarea = ({\n  onChange,\n  placeholder,\n  label,\n  disabled,\n  textareaClassName,\n  labelClassName,\n  value,\n}) => {\n  const [inputValue, setInputValue] = useState(value);\n  const handleValueChange = (e) => {\n    const value = e.target.value;\n    setInputValue(value);\n    onChange(e);\n  };\n\n  useEffect(\n    (_) => {\n      if (value !== inputValue) {\n        setInputValue(value);\n      }\n    },\n    [value]\n  );\n\n  return (\n    <div className={styles.textarea}>\n      <label className={cn(styles.textareaLabel, labelClassName)}>\n        <div className={styles.textareaLabelText}>{label}</div>\n        <textarea\n          rows=\"8\"\n          value={inputValue}\n          placeholder={placeholder}\n          className={cn(styles.textareaField, textareaClassName)}\n          onChange={(e) => {\n            handleValueChange(e);\n          }}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Textarea;\n","/app/src/components/checkbox/index.js",["563","564","565"],[],"import cn from 'classnames'\nimport styles from './styles.module.css'\nimport { useState } from 'react'\nimport { Icons } from '../index'\nimport { hexToRgba } from '../../utils'\n\nconst Checkbox = ({\n  onChange,\n  className,\n  color,\n  value = false,\n  name,\n  id\n}) => {\n  const clickHandler = () => {\n    onChange && onChange(id)\n  }\n  const classNames = cn(styles['checkbox-container'], className, {\n    [styles['checkbox_active']]: value\n  })\n\n  return <div className={classNames} onClick={clickHandler}>\n    {name}\n  </div>\n}\n\n\nexport default Checkbox","/app/src/components/card-list/index.js",[],[],"/app/src/components/ingredients-search/index.js",[],[],"/app/src/components/checkbox-group/index.js",["566"],[],"import cn from 'classnames'\nimport styles from './styles.module.css'\nimport { useState } from 'react'\nimport { Checkbox } from '../index'\n\nconst CheckboxGroup = ({\n  onUpdated,\n  label,\n  values = [],\n  handleChange,\n  className,\n  labelClassName,\n  checkboxClassName,\n  emptyText\n}) => {\n  return <div className={cn(styles.checkboxGroup, className)}>\n    {label && <div className={cn(styles.label, labelClassName)}>\n      {label}\n    </div>}\n    <div className={cn(styles.checkboxGroupItems)}>\n      {values.length === 0 && emptyText && <div className={styles.noValues}>{emptyText}</div>}\n      {values.map(item => {\n        return <Checkbox\n          key={item.id}\n          id={item.id}\n          value={item.value}\n          name={item.name}\n          color={item.color}\n          onChange={handleChange}\n          className={checkboxClassName}\n        />\n      })}\n    </div>\n  </div>\n}\n\n\nexport default CheckboxGroup","/app/src/components/file-input/index.js",["567","568"],[],"import { useState, useEffect, useRef } from 'react'\nimport styles from './styles.module.css'\nimport { Button } from '../index'\nimport cn from 'classnames'\nimport Icons from '../icons'\nimport DefaultImage from \"../../images/userpic-icon.jpg\"\n\nconst FileInput = ({\n  label,\n  onChange,\n  file = null,\n  className,\n  fileSize,\n  fileTypes\n}) => {\n  const [ currentFile, setCurrentFile ] = useState(file)\n  const fileInput = useRef(null)\n\n  useEffect(_ => {\n    if (file !== currentFile) {\n      setCurrentFile(file)\n    }\n  }, [file])\n\n  const getBase64 = (file) => {\n    const reader = new FileReader()\n\n    if (fileSize && ((file.size / 1000) > fileSize)) {\n      return alert(`Загрузите файл размером не более ${fileSize / 1000}Мб`)\n    }\n    if (fileTypes && !fileTypes.includes(file.type)) {\n      return alert(`Загрузите файл одного из типов: ${fileTypes.join(', ')}`)\n    }\n    reader.readAsDataURL(file);\n    reader.onload = function () {\n      setCurrentFile(reader.result)\n      onChange(reader.result)\n    };\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    }\n  }\n\n  return <div className={cn(styles.container, className)}>\n    {label && <label className={styles.label}>\n      {label}\n    </label>}\n    <input\n      className={styles.fileInput}\n      type='file'\n      ref={fileInput}\n      onChange={e => {\n        const file = e.target.files[0]\n        getBase64(file)\n      }}\n    />\n    <Button\n      clickHandler={_ => {\n        fileInput.current.click()\n      }}\n      className={styles.button}\n      type='button'\n    >\n      Выбрать файл\n    </Button>\n    {currentFile && <div\n      className={styles.image}\n      style={{\n        backgroundImage: `url(${currentFile})`\n      }}\n      onClick={() => {\n        onChange(null)\n        setCurrentFile(null)\n        fileInput.current.value = null\n      }}\n    >\n      <div className={styles.imageOverlay}>\n        <Icons.ReceiptDelete />\n      </div>\n    </div>}\n  </div>\n}\n\nexport default FileInput","/app/src/components/subscription/index.js",[],[],"/app/src/components/protected-route/index.js",[],[],"/app/src/components/purchase/index.js",["569"],[],"import styles from './styles.module.css'\nimport { LinkComponent, Icons, Popup } from '../index'\nimport { useState } from 'react'\nimport cn from 'classnames'\n\nconst Purchase = ({\n  image,\n  name,\n  cooking_time,\n  id,\n  handleRemoveFromCart,\n  is_in_shopping_cart,\n  updateOrders,\n  ingredients\n}) => {\n  const [ expanded, setExpanded ] = useState(false)\n  const [ toDelete, setToDelete ] = useState(false)\n  if (!is_in_shopping_cart) { return null }\n\n  return <li className={styles.purchase}>\n    {toDelete && <Popup\n      title='Вы уверены, что хотите удалить рецепт?'\n      onSubmit={() => {\n        handleRemoveFromCart({\n          id,\n          toAdd: false,\n          callback: () => {\n            updateOrders()\n            setToDelete(false)\n          }\n        })\n      }}\n      onClose={() => {\n        setToDelete(false)\n      }}\n    />}\n    <div className={styles.purchaseBody}>\n      <div className={styles.purchaseContent}>\n        <div\n          alt={name}\n          className={styles.purchaseImage}\n          style={{\n            backgroundImage: `url(${image})`\n          }}\n        />\n        <h3 className={styles.purchaseTitle}>\n          <LinkComponent className={styles.recipeLink} title={name} href={`/recipes/${id}`} />\n          <div className={cn(styles.purchaseExpandButton, {\n            [styles.purchaseExpandButtonExpanded]: expanded\n          })} onClick={() => setExpanded(!expanded)}>\n            <Icons.ArrowExpand />\n          </div>\n        </h3>\n        <p className={styles.purchaseText}>\n          {cooking_time} мин.\n        </p>\n      </div>\n      <a\n        href=\"#\"\n        className={styles.purchaseDelete}\n        onClick={_ => setToDelete(true)}\n      >\n        <Icons.ReceiptDelete />\n      </a>\n    </div>\n    {expanded && ingredients && ingredients.length > 0 && <ul className={styles.purchaseIngredients}>\n      {ingredients.map(ingredient => {\n      return <li>{ingredient.name}</li>\n      })}\n    </ul>}\n    \n  </li>\n}\n\nexport default Purchase\n","/app/src/components/form/index.js",[],[],"/app/src/components/nav-menu/index.js",[],[],"/app/src/components/footer/index.js",["570"],[],"import styles from './style.module.css'\nimport { Container, LinkComponent } from '../index'\nimport LogoFooter from '../../images/logo-footer.png'\n\nconst Footer = () => {\n  return <footer className={styles.footer}>\n    <Container className={styles.footer__container}>\n      <LinkComponent\n        href='#'\n        className={styles.footer__brand}\n        title={<img src={LogoFooter} className={styles.footer__logo} />}\n      />\n\n      <div className={styles['footer__menu']}>\n        <ul className={styles['footer__menu-list']}>\n          <li className={styles['footer__menu-item']}>\n            <LinkComponent\n              title='О проекте'\n              href='/about'\n              exact\n              className={styles['footer__menu-link']}\n            />\n          </li>\n          <li className={styles['footer__menu-item']}>\n            <LinkComponent\n              title='Технологии'\n              href='/technologies'\n              exact\n              className={styles['footer__menu-link']}\n            />\n          </li>\n        </ul>\n      </div>\n\n      <div class={styles.footer__copyright}>\n      © {(new Date()).getFullYear()}\n      </div>\n    </Container>\n  </footer>\n}\n\nexport default Footer\n","/app/src/components/form-title/index.jsx",[],[],"/app/src/components/orders/index.js",[],[],"/app/src/components/subscription-list/index.js",[],[],"/app/src/utils/index.js",[],[],"/app/src/components/account/index.js",["571"],[],"import styles from \"./styles.module.css\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { LinkComponent, Orders } from \"../index.js\";\nimport { AuthContext, UserContext } from \"../../contexts\";\nimport { UserMenu } from \"../../configs/navigation\";\nimport Icons from \"../icons\";\nimport DefaultImage from \"../../images/userpic-icon.jpg\";\nimport { AvatarPopup } from \"../avatar-popup\";\nimport api from \"../../api\";\n\nconst AccountData = ({ userContext, setIsChangeAvatarOpen }) => {\n  return (\n    <div className={styles.accountProfile}>\n      <div className={styles.accountData}>\n        <div className={styles.accountName}>\n          {userContext.first_name} {userContext.last_name}\n        </div>\n        <div className={styles.accountEmail}>{userContext.email}</div>\n      </div>\n    </div>\n  );\n};\n\nconst Account = ({ onSignOut, orders }) => {\n  const authContext = useContext(AuthContext);\n  const userContext = useContext(UserContext);\n  const [isChangeAvatarOpen, setIsChangeAvatarOpen] = useState(false);\n  const [newAvatar, setNewAvatar] = useState(\"\");\n\n  const handleSaveAvatar = () => {\n    if (newAvatar) {\n      api\n        .changeAvatar({ file: newAvatar })\n        .then(({ avatar }) => {\n          userContext.avatar = avatar;\n          setIsChangeAvatarOpen(false);\n        })\n        .catch((err) => console.log(err));\n    } else {\n      api\n        .deleteAvatar()\n        .then(() => {\n          userContext.avatar = \"\";\n          setIsChangeAvatarOpen(false);\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  if (!authContext) {\n    return null;\n  }\n\n  return (\n    <>\n      <LinkComponent\n        className={styles.accountOrders}\n        href=\"/cart\"\n        title={<Orders orders={orders} />}\n      />\n      <div\n        style={{\n          \"background-image\": `url(${userContext.avatar || DefaultImage})`,\n        }}\n        className={styles.accountAvatar}\n        onClick={() => {\n          setIsChangeAvatarOpen(true);\n        }}\n      >\n        <div className={styles.imageOverlay}>\n          <Icons.AddAvatarIcon />\n        </div>\n      </div>\n      <div className={styles.account}>\n        <AccountData\n          userContext={userContext}\n          setIsChangeAvatarOpen={setIsChangeAvatarOpen}\n        />\n\n        <div className={styles.accountControls}>\n          <ul className={styles.accountLinks}>\n            {UserMenu.map((menuItem) => {\n              return (\n                <li className={styles.accountLinkItem}>\n                  <LinkComponent\n                    className={styles.accountLink}\n                    href={menuItem.href}\n                    title={\n                      <div className={styles.accountLinkTitle}>\n                        <div className={styles.accountLinkIcon}>\n                          {menuItem.icon}\n                        </div>\n                        {menuItem.title}\n                      </div>\n                    }\n                  />\n                </li>\n              );\n            })}\n            <li className={styles.accountLinkItem} onClick={onSignOut}>\n              <div className={styles.accountLinkIcon}>\n                <Icons.LogoutMenu />\n              </div>\n              Выйти\n            </li>\n          </ul>\n        </div>\n      </div>\n      {isChangeAvatarOpen && (\n        <AvatarPopup\n          info=\"test\"\n          avatar={userContext.avatar}\n          onClose={() => setIsChangeAvatarOpen(false)}\n          onSubmit={handleSaveAvatar}\n          onChange={setNewAvatar}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Account;\n","/app/src/components/title/index.js",[],[],"/app/src/components/popup/index.js",[],[],"/app/src/components/purchase-list/index.js",["572"],[],"import styles from './styles.module.css'\nimport cn from 'classnames'\nimport { Purchase } from '../index'\n\nconst PurchaseList = ({ orders = [], updateOrders, handleRemoveFromCart }) => {\n  return <ul className={styles.purchaseList}>\n    {orders.map(order => <Purchase\n      updateOrders={updateOrders}\n      handleRemoveFromCart={handleRemoveFromCart}\n      key={order.id}\n      {...order}\n    />)}\n  </ul>\n}\n\nexport default PurchaseList\n","/app/src/pages/single-card/description/index.js",[],[],"/app/src/pages/single-card/ingredients/index.js",[],[],"/app/src/components/notification/index.js",[],[],"/app/src/components/icons/star/index.js",[],[],"/app/src/components/icons/clock/index.js",[],[],"/app/src/components/icons/check/index.js",[],[],"/app/src/components/icons/user/index.js",[],[],"/app/src/components/icons/arrow-left/index.js",[],[],"/app/src/components/icons/star-active/index.js",[],[],"/app/src/components/icons/arrow-right/index.js",[],[],"/app/src/components/icons/logout-menu/index.js",[],[],"/app/src/components/icons/saved-menu/index.js",[],[],"/app/src/components/icons/plus/index.js",[],[],"/app/src/components/icons/done/index.js",[],[],"/app/src/components/icons/like/index.js",[],[],"/app/src/components/icons/add-user/index.js",[],[],"/app/src/components/icons/like-active/index.js",[],[],"/app/src/components/icons/reset-password-menu/index.js",[],[],"/app/src/components/icons/subscriptions-menu/index.js",[],[],"/app/src/components/icons/ingredient-delete/index.js",[],[],"/app/src/components/icons/receipt-delete/index.js",[],[],"/app/src/components/icons/arrow-expand/index.js",[],[],"/app/src/components/icons/cart/index.js",[],[],"/app/src/components/icons/popup-close/index.js",[],[],"/app/src/components/icons/pagination-arrow/index.js",[],[],"/app/src/components/icons/add-avatar/index.js",[],[],"/app/src/components/icons/delete-avatar/index.js",[],[],"/app/src/components/icons/copy-link/index.js",[],[],"/app/src/components/change-password-text/index.js",[],[],"/app/src/configs/navigation.js",["573"],[],"import Icons from \"../components/icons\"\n\nexport default [\n  {\n    title: 'Рецепты',\n    href: '/recipes',\n    auth: false\n  }, {\n    title: 'Создать рецепт',\n    href: '/recipes/create',\n    auth: true\n  }\n]\n\nexport const UserMenu = [\n  {\n    title: 'Мои подписки',\n    href: '/subscriptions',\n    auth: true,\n    icon: <Icons.SubscriptionsMenu />\n  }, {\n    title: 'Избранное',\n    href: '/favorites',\n    auth: true,\n    icon: <Icons.SavedMenu />\n  }, {\n    \n    title: 'Сменить пароль',\n    href: '/change-password',\n    auth: true,\n    icon: <Icons.ResetPasswordMenu />\n  }\n]\n\nexport const NotLoggedInMenu = [\n  {\n    title: 'Войти',\n    href: '/signin',\n    auth: false\n  }, {\n    title: 'Создать аккаунт',\n    href: '/signup',\n    auth: false\n  }\n]\n","/app/src/components/avatar-popup/index.js",[],[],"/app/src/utils/hex-to-rgba.js",[],[],"/app/src/utils/validation.js",[],[],"/app/src/utils/use-recipes.js",["574","575"],[],"import React, { useState } from \"react\";\nimport { useTags } from './index.js'\nimport api from '../api'\n\nexport default function useRecipes () {\n  const [ recipes, setRecipes ] = useState([])\n  const [ recipesCount, setRecipesCount ] = useState(0)\n  const [ recipesPage, setRecipesPage ] = useState(1)\n\n  const handleLike = ({ id, toLike = true }) => {\n    const method = toLike ? api.addToFavorites.bind(api) : api.removeFromFavorites.bind(api)\n    method({ id }).then(res => {\n      const recipesUpdated = recipes.map(recipe => {\n        if (recipe.id === id) {\n          recipe.is_favorited = toLike\n        }\n        return recipe\n      })\n      setRecipes(recipesUpdated)\n    })\n    .catch(err => {\n      const { errors } = err\n      if (errors) {\n        alert(errors)\n      }\n    })\n  }\n\n  const handleAddToCart = ({ id, toAdd = true, callback }) => {\n    const method = toAdd ? api.addToOrders.bind(api) : api.removeFromOrders.bind(api)\n    method({ id }).then(res => {\n      const recipesUpdated = recipes.map(recipe => {\n        if (recipe.id === id) {\n          recipe.is_in_shopping_cart = toAdd\n        }\n        return recipe\n      })\n      setRecipes(recipesUpdated)\n      callback && callback(toAdd)\n    })\n    .catch(err => {\n      const { errors } = err\n      if (errors) {\n        alert(errors)\n      }\n    })\n  }\n\n  return {\n    recipes,\n    setRecipes,\n    recipesCount,\n    setRecipesCount,\n    recipesPage,\n    setRecipesPage,\n    handleLike,\n    handleAddToCart,\n  }\n}\n","/app/src/utils/use-recipe.js",["576"],[],"import React, { useState } from \"react\";\nimport api from '../api'\n\nexport default function useRecipe () {\n  const [ recipe, setRecipe ] = useState({})\n\n  const handleLike = ({ id, toLike = 1 }) => {\n    const method = toLike ? api.addToFavorites.bind(api) : api.removeFromFavorites.bind(api)\n    method({ id }).then(res => {\n      const recipeUpdated = { ...recipe, is_favorited: Number(toLike) }\n      setRecipe(recipeUpdated)\n    })\n    .catch(err => {\n      const { errors } = err\n      if (errors) {\n        alert(errors)\n      }\n    })\n  }\n\n  const handleAddToCart = ({ id, toAdd = 1, callback }) => {\n    const method = toAdd ? api.addToOrders.bind(api) : api.removeFromOrders.bind(api)\n    method({ id }).then(res => {\n      const recipeUpdated = { ...recipe, is_in_shopping_cart: Number(toAdd) }\n      setRecipe(recipeUpdated)\n      callback && callback(toAdd)\n    })\n    .catch(err => {\n      const { errors } = err\n      if (errors) {\n        alert(errors)\n      }\n    })\n  }\n\n  const handleSubscribe = ({ author_id, toSubscribe = 1 }) => {\n    const method = toSubscribe ? api.subscribe.bind(api) : api.deleteSubscriptions.bind(api)\n      method({\n        author_id\n      })\n      .then(_ => {\n        const recipeUpdated = { ...recipe, author: { ...recipe.author, is_subscribed: toSubscribe } }\n        setRecipe(recipeUpdated)\n      })\n      .catch(err => {\n        const { errors } = err\n        if (errors) {\n          alert(errors)\n        }\n      })\n  }\n\n  return {\n    recipe,\n    setRecipe,\n    handleLike,\n    handleAddToCart,\n    handleSubscribe\n  }\n}\n","/app/src/utils/use-subscriptions.js",["577","578"],[],"import React, { useState } from \"react\";\nimport { useTags } from './index.js'\nimport api from '../api'\n\nexport default function useRecipes () {\n  const [ subscriptions, setSubscriptions ] = useState([])\n  const [ subscriptionsPage, setSubscriptionsPage ] = useState(1)\n  const [ subscriptionsCount, setSubscriptionsCount ] = useState(0)\n\n  const removeSubscription = ({ id, callback }) => {\n    api\n      .deleteSubscriptions({ author_id: id })\n      .then(res => {\n        const subscriptionsUpdated = subscriptions.filter(item => {\n          return item.id !== id\n        })\n        setSubscriptions(subscriptionsUpdated)\n        setSubscriptionsCount(subscriptionsCount - 1)\n        callback && callback()\n      })\n      .catch(err => {\n        const { errors } = err\n        if (errors) {\n          alert(errors)\n        }\n      })\n  }\n  \n  return {\n    subscriptions,\n    setSubscriptions,\n    subscriptionsPage,\n    setSubscriptionsPage,\n    removeSubscription,\n    subscriptionsCount,\n    setSubscriptionsCount\n  }\n}\n","/app/src/utils/use-tags.js",[],[],{"ruleId":"579","severity":1,"message":"580","line":206,"column":6,"nodeType":"581","endLine":206,"endColumn":8,"suggestions":"582"},{"ruleId":"583","severity":1,"message":"584","line":306,"column":11,"nodeType":"585","messageId":"586","endLine":306,"endColumn":16},{"ruleId":"583","severity":1,"message":"587","line":1,"column":62,"nodeType":"585","messageId":"586","endLine":1,"endColumn":75},{"ruleId":"579","severity":1,"message":"588","line":32,"column":6,"nodeType":"581","endLine":32,"endColumn":19,"suggestions":"589"},{"ruleId":"583","severity":1,"message":"590","line":1,"column":10,"nodeType":"585","messageId":"586","endLine":1,"endColumn":15},{"ruleId":"591","severity":1,"message":"592","line":41,"column":43,"nodeType":"593","endLine":41,"endColumn":83},{"ruleId":"591","severity":1,"message":"592","line":44,"column":30,"nodeType":"593","endLine":44,"endColumn":70},{"ruleId":"583","severity":1,"message":"590","line":1,"column":10,"nodeType":"585","messageId":"586","endLine":1,"endColumn":15},{"ruleId":"583","severity":1,"message":"587","line":1,"column":62,"nodeType":"585","messageId":"586","endLine":1,"endColumn":75},{"ruleId":"579","severity":1,"message":"588","line":32,"column":6,"nodeType":"581","endLine":32,"endColumn":19,"suggestions":"594"},{"ruleId":"583","severity":1,"message":"587","line":7,"column":3,"nodeType":"585","messageId":"586","endLine":7,"endColumn":16},{"ruleId":"583","severity":1,"message":"595","line":23,"column":18,"nodeType":"585","messageId":"586","endLine":23,"endColumn":30},{"ruleId":"583","severity":1,"message":"596","line":23,"column":32,"nodeType":"585","messageId":"586","endLine":23,"endColumn":40},{"ruleId":"579","severity":1,"message":"597","line":106,"column":5,"nodeType":"581","endLine":106,"endColumn":12,"suggestions":"598"},{"ruleId":"583","severity":1,"message":"599","line":4,"column":21,"nodeType":"585","messageId":"586","endLine":4,"endColumn":29},{"ruleId":"579","severity":1,"message":"588","line":30,"column":6,"nodeType":"581","endLine":30,"endColumn":8,"suggestions":"600"},{"ruleId":"583","severity":1,"message":"587","line":7,"column":3,"nodeType":"585","messageId":"586","endLine":7,"endColumn":16},{"ruleId":"579","severity":1,"message":"588","line":67,"column":5,"nodeType":"581","endLine":67,"endColumn":24,"suggestions":"601"},{"ruleId":"579","severity":1,"message":"602","line":72,"column":6,"nodeType":"581","endLine":72,"endColumn":8,"suggestions":"603"},{"ruleId":"583","severity":1,"message":"604","line":2,"column":15,"nodeType":"585","messageId":"586","endLine":2,"endColumn":26},{"ruleId":"583","severity":1,"message":"605","line":23,"column":10,"nodeType":"585","messageId":"586","endLine":23,"endColumn":17},{"ruleId":"579","severity":1,"message":"606","line":78,"column":6,"nodeType":"581","endLine":78,"endColumn":8,"suggestions":"607"},{"ruleId":"608","severity":1,"message":"609","line":27,"column":1,"nodeType":"610","endLine":53,"endColumn":3},{"ruleId":"583","severity":1,"message":"611","line":12,"column":10,"nodeType":"585","messageId":"586","endLine":12,"endColumn":18},{"ruleId":"583","severity":1,"message":"612","line":18,"column":50,"nodeType":"585","messageId":"586","endLine":18,"endColumn":59},{"ruleId":"583","severity":1,"message":"613","line":20,"column":9,"nodeType":"585","messageId":"586","endLine":20,"endColumn":20},{"ruleId":"583","severity":1,"message":"614","line":2,"column":10,"nodeType":"585","messageId":"586","endLine":2,"endColumn":14},{"ruleId":"579","severity":1,"message":"615","line":37,"column":6,"nodeType":"581","endLine":37,"endColumn":13,"suggestions":"616"},{"ruleId":"579","severity":1,"message":"617","line":29,"column":6,"nodeType":"581","endLine":29,"endColumn":25,"suggestions":"618"},{"ruleId":"619","severity":1,"message":"620","line":34,"column":7,"nodeType":"593","endLine":34,"endColumn":67},{"ruleId":"583","severity":1,"message":"621","line":3,"column":10,"nodeType":"585","messageId":"586","endLine":3,"endColumn":20},{"ruleId":"583","severity":1,"message":"622","line":5,"column":10,"nodeType":"585","messageId":"586","endLine":5,"endColumn":21},{"ruleId":"583","severity":1,"message":"587","line":7,"column":3,"nodeType":"585","messageId":"586","endLine":7,"endColumn":16},{"ruleId":"583","severity":1,"message":"623","line":16,"column":10,"nodeType":"585","messageId":"586","endLine":16,"endColumn":17},{"ruleId":"583","severity":1,"message":"612","line":10,"column":42,"nodeType":"585","messageId":"586","endLine":10,"endColumn":51},{"ruleId":"624","severity":1,"message":"625","line":13,"column":3,"nodeType":"626","messageId":"627","endLine":13,"endColumn":46},{"ruleId":"579","severity":1,"message":"628","line":15,"column":6,"nodeType":"581","endLine":15,"endColumn":12,"suggestions":"629"},{"ruleId":"583","severity":1,"message":"614","line":2,"column":10,"nodeType":"585","messageId":"586","endLine":2,"endColumn":14},{"ruleId":"579","severity":1,"message":"615","line":28,"column":5,"nodeType":"581","endLine":28,"endColumn":12,"suggestions":"630"},{"ruleId":"583","severity":1,"message":"599","line":3,"column":10,"nodeType":"585","messageId":"586","endLine":3,"endColumn":18},{"ruleId":"583","severity":1,"message":"631","line":4,"column":10,"nodeType":"585","messageId":"586","endLine":4,"endColumn":15},{"ruleId":"583","severity":1,"message":"632","line":5,"column":10,"nodeType":"585","messageId":"586","endLine":5,"endColumn":19},{"ruleId":"583","severity":1,"message":"599","line":3,"column":10,"nodeType":"585","messageId":"586","endLine":3,"endColumn":18},{"ruleId":"583","severity":1,"message":"633","line":6,"column":8,"nodeType":"585","messageId":"586","endLine":6,"endColumn":20},{"ruleId":"579","severity":1,"message":"634","line":23,"column":6,"nodeType":"581","endLine":23,"endColumn":12,"suggestions":"635"},{"ruleId":"591","severity":1,"message":"592","line":58,"column":7,"nodeType":"593","endLine":62,"endColumn":8},{"ruleId":"619","severity":1,"message":"620","line":11,"column":16,"nodeType":"593","endLine":11,"endColumn":72},{"ruleId":"583","severity":1,"message":"636","line":2,"column":22,"nodeType":"585","messageId":"586","endLine":2,"endColumn":31},{"ruleId":"583","severity":1,"message":"637","line":2,"column":8,"nodeType":"585","messageId":"586","endLine":2,"endColumn":10},{"ruleId":"608","severity":1,"message":"638","line":3,"column":1,"nodeType":"610","endLine":13,"endColumn":2},{"ruleId":"583","severity":1,"message":"639","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"623","line":2,"column":10,"nodeType":"585","messageId":"586","endLine":2,"endColumn":17},{"ruleId":"583","severity":1,"message":"639","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"639","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"623","line":2,"column":10,"nodeType":"585","messageId":"586","endLine":2,"endColumn":17},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["640"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'CheckboxGroup' is defined but never used.","React Hook useEffect has a missing dependency: 'getRecipes'. Either include it or remove the dependency array.",["641"],"'Title' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["642"],"'handleChange' is assigned a value but never used.","'setValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'id', and 'loading'. Either include them or remove the dependency array.",["643"],"'useState' is defined but never used.",["644"],["645"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["646"],"'AccountMenu' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'id', and 'setRecipe'. Either include them or remove the dependency array.",["647"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Redirect' is defined but never used.","'resetForm' is assigned a value but never used.","'authContext' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'inputValue'. Either include it or remove the dependency array.",["648"],"React Hook useEffect has a missing dependency: 'getSubscriptions'. Either include it or remove the dependency array.",["649"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useHistory' is defined but never used.","'AuthContext' is defined but never used.","'useTags' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'active'. Either include it or remove the dependency array.",["650"],["651"],"'Icons' is defined but never used.","'hexToRgba' is defined but never used.","'DefaultImage' is defined but never used.","React Hook useEffect has a missing dependency: 'currentFile'. Either include it or remove the dependency array.",["652"],"'useEffect' is defined but never used.","'cn' is defined but never used.","Assign array to a variable before exporting as module default","'React' is defined but never used.",{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"655","fix":"657"},{"desc":"658","fix":"659"},{"desc":"660","fix":"661"},{"desc":"662","fix":"663"},{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},{"desc":"672","fix":"673"},{"desc":"668","fix":"674"},{"desc":"675","fix":"676"},"Update the dependencies array to be: [history]",{"range":"677","text":"678"},"Update the dependencies array to be: [getRecipes, recipesPage]",{"range":"679","text":"680"},{"range":"681","text":"680"},"Update the dependencies array to be: [history, id, loading, value]",{"range":"682","text":"683"},"Update the dependencies array to be: [getRecipes]",{"range":"684","text":"685"},"Update the dependencies array to be: [getRecipes, recipesPage, user]",{"range":"686","text":"687"},"Update the dependencies array to be: [getUser]",{"range":"688","text":"689"},"Update the dependencies array to be: [history, id, setRecipe]",{"range":"690","text":"691"},"Update the dependencies array to be: [inputValue, value]",{"range":"692","text":"693"},"Update the dependencies array to be: [getSubscriptions, subscriptionsPage]",{"range":"694","text":"695"},"Update the dependencies array to be: [active, page]",{"range":"696","text":"697"},{"range":"698","text":"693"},"Update the dependencies array to be: [currentFile, file]",{"range":"699","text":"700"},[4697,4699],"[history]",[779,792],"[getRecipes, recipesPage]",[810,823],[2818,2825],"[history, id, loading, value]",[690,692],"[getRecipes]",[1601,1620],"[getRecipes, recipesPage, user]",[1668,1670],"[getUser]",[2364,2366],"[history, id, setRecipe]",[730,737],"[inputValue, value]",[745,764],"[getSubscriptions, subscriptionsPage]",[456,462],"[active, page]",[573,580],[524,530],"[currentFile, file]"]