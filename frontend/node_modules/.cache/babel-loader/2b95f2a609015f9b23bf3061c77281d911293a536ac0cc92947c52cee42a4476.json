{"ast":null,"code":"import _objectWithoutProperties from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _defineProperty from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _excluded = [\"crossAxis\", \"alignment\", \"allowedPlacements\", \"autoAlignment\"],\n  _excluded2 = [\"mainAxis\", \"crossAxis\", \"fallbackPlacements\", \"fallbackStrategy\", \"fallbackAxisSideDirection\", \"flipAlignment\"],\n  _excluded3 = [\"strategy\"],\n  _excluded4 = [\"mainAxis\", \"crossAxis\", \"limiter\"],\n  _excluded5 = [\"apply\"];\nimport { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  var reference = _ref.reference,\n    floating = _ref.floating;\n  var sideAxis = getSideAxis(placement);\n  var alignmentAxis = getAlignmentAxis(placement);\n  var alignLength = getAxisLength(alignmentAxis);\n  var side = getSide(placement);\n  var isVertical = sideAxis === 'y';\n  var commonX = reference.x + reference.width / 2 - floating.width / 2;\n  var commonY = reference.y + reference.height / 2 - floating.height / 2;\n  var commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  var coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nvar computePosition = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(reference, floating, config) {\n    var _config$placement, placement, _config$strategy, strategy, _config$middleware, middleware, platform, validMiddleware, rtl, rects, _computeCoordsFromPla, x, y, statefulPlacement, middlewareData, resetCount, i, _validMiddleware$i, name, fn, _yield$fn, nextX, nextY, data, reset, _computeCoordsFromPla2;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _config$placement = config.placement, placement = _config$placement === void 0 ? 'bottom' : _config$placement, _config$strategy = config.strategy, strategy = _config$strategy === void 0 ? 'absolute' : _config$strategy, _config$middleware = config.middleware, middleware = _config$middleware === void 0 ? [] : _config$middleware, platform = config.platform;\n            validMiddleware = middleware.filter(Boolean);\n            _context.next = 4;\n            return platform.isRTL == null ? void 0 : platform.isRTL(floating);\n          case 4:\n            rtl = _context.sent;\n            _context.next = 7;\n            return platform.getElementRects({\n              reference: reference,\n              floating: floating,\n              strategy: strategy\n            });\n          case 7:\n            rects = _context.sent;\n            _computeCoordsFromPla = computeCoordsFromPlacement(rects, placement, rtl), x = _computeCoordsFromPla.x, y = _computeCoordsFromPla.y;\n            statefulPlacement = placement;\n            middlewareData = {};\n            resetCount = 0;\n            i = 0;\n          case 13:\n            if (!(i < validMiddleware.length)) {\n              _context.next = 45;\n              break;\n            }\n            _validMiddleware$i = validMiddleware[i], name = _validMiddleware$i.name, fn = _validMiddleware$i.fn;\n            _context.next = 17;\n            return fn({\n              x: x,\n              y: y,\n              initialPlacement: placement,\n              placement: statefulPlacement,\n              strategy: strategy,\n              middlewareData: middlewareData,\n              rects: rects,\n              platform: platform,\n              elements: {\n                reference: reference,\n                floating: floating\n              }\n            });\n          case 17:\n            _yield$fn = _context.sent;\n            nextX = _yield$fn.x;\n            nextY = _yield$fn.y;\n            data = _yield$fn.data;\n            reset = _yield$fn.reset;\n            x = nextX != null ? nextX : x;\n            y = nextY != null ? nextY : y;\n            middlewareData = _objectSpread(_objectSpread({}, middlewareData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, middlewareData[name]), data)));\n            if (!(reset && resetCount <= 50)) {\n              _context.next = 42;\n              break;\n            }\n            resetCount++;\n            if (!(typeof reset === 'object')) {\n              _context.next = 41;\n              break;\n            }\n            if (reset.placement) {\n              statefulPlacement = reset.placement;\n            }\n            if (!reset.rects) {\n              _context.next = 38;\n              break;\n            }\n            if (!(reset.rects === true)) {\n              _context.next = 36;\n              break;\n            }\n            _context.next = 33;\n            return platform.getElementRects({\n              reference: reference,\n              floating: floating,\n              strategy: strategy\n            });\n          case 33:\n            _context.t0 = _context.sent;\n            _context.next = 37;\n            break;\n          case 36:\n            _context.t0 = reset.rects;\n          case 37:\n            rects = _context.t0;\n          case 38:\n            _computeCoordsFromPla2 = computeCoordsFromPlacement(rects, statefulPlacement, rtl);\n            x = _computeCoordsFromPla2.x;\n            y = _computeCoordsFromPla2.y;\n          case 41:\n            i = -1;\n          case 42:\n            i++;\n            _context.next = 13;\n            break;\n          case 45:\n            return _context.abrupt(\"return\", {\n              x: x,\n              y: y,\n              placement: statefulPlacement,\n              strategy: strategy,\n              middlewareData: middlewareData\n            });\n          case 46:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function computePosition(_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nfunction detectOverflow(_x4, _x5) {\n  return _detectOverflow.apply(this, arguments);\n}\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nfunction _detectOverflow() {\n  _detectOverflow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(state, options) {\n    var _await$platform$isEle, x, y, platform, rects, elements, strategy, _evaluate8, _evaluate8$boundary, boundary, _evaluate8$rootBounda, rootBoundary, _evaluate8$elementCon, elementContext, _evaluate8$altBoundar, altBoundary, _evaluate8$padding, padding, paddingObject, altContext, element, clippingClientRect, rect, offsetParent, offsetScale, elementClientRect;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            if (options === void 0) {\n              options = {};\n            }\n            x = state.x, y = state.y, platform = state.platform, rects = state.rects, elements = state.elements, strategy = state.strategy;\n            _evaluate8 = evaluate(options, state), _evaluate8$boundary = _evaluate8.boundary, boundary = _evaluate8$boundary === void 0 ? 'clippingAncestors' : _evaluate8$boundary, _evaluate8$rootBounda = _evaluate8.rootBoundary, rootBoundary = _evaluate8$rootBounda === void 0 ? 'viewport' : _evaluate8$rootBounda, _evaluate8$elementCon = _evaluate8.elementContext, elementContext = _evaluate8$elementCon === void 0 ? 'floating' : _evaluate8$elementCon, _evaluate8$altBoundar = _evaluate8.altBoundary, altBoundary = _evaluate8$altBoundar === void 0 ? false : _evaluate8$altBoundar, _evaluate8$padding = _evaluate8.padding, padding = _evaluate8$padding === void 0 ? 0 : _evaluate8$padding;\n            paddingObject = getPaddingObject(padding);\n            altContext = elementContext === 'floating' ? 'reference' : 'floating';\n            element = elements[altBoundary ? altContext : elementContext];\n            _context10.t0 = rectToClientRect;\n            _context10.t1 = platform;\n            _context10.next = 10;\n            return platform.isElement == null ? void 0 : platform.isElement(element);\n          case 10:\n            _context10.t2 = _await$platform$isEle = _context10.sent;\n            if (!(_context10.t2 != null)) {\n              _context10.next = 15;\n              break;\n            }\n            _context10.t3 = _await$platform$isEle;\n            _context10.next = 16;\n            break;\n          case 15:\n            _context10.t3 = true;\n          case 16:\n            if (!_context10.t3) {\n              _context10.next = 20;\n              break;\n            }\n            _context10.t4 = element;\n            _context10.next = 26;\n            break;\n          case 20:\n            _context10.t5 = element.contextElement;\n            if (_context10.t5) {\n              _context10.next = 25;\n              break;\n            }\n            _context10.next = 24;\n            return platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating);\n          case 24:\n            _context10.t5 = _context10.sent;\n          case 25:\n            _context10.t4 = _context10.t5;\n          case 26:\n            _context10.t6 = _context10.t4;\n            _context10.t7 = boundary;\n            _context10.t8 = rootBoundary;\n            _context10.t9 = strategy;\n            _context10.t10 = {\n              element: _context10.t6,\n              boundary: _context10.t7,\n              rootBoundary: _context10.t8,\n              strategy: _context10.t9\n            };\n            _context10.next = 33;\n            return _context10.t1.getClippingRect.call(_context10.t1, _context10.t10);\n          case 33:\n            _context10.t11 = _context10.sent;\n            clippingClientRect = (0, _context10.t0)(_context10.t11);\n            rect = elementContext === 'floating' ? {\n              x: x,\n              y: y,\n              width: rects.floating.width,\n              height: rects.floating.height\n            } : rects.reference;\n            _context10.next = 38;\n            return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n          case 38:\n            offsetParent = _context10.sent;\n            _context10.next = 41;\n            return platform.isElement == null ? void 0 : platform.isElement(offsetParent);\n          case 41:\n            if (!_context10.sent) {\n              _context10.next = 50;\n              break;\n            }\n            _context10.next = 44;\n            return platform.getScale == null ? void 0 : platform.getScale(offsetParent);\n          case 44:\n            _context10.t13 = _context10.sent;\n            if (_context10.t13) {\n              _context10.next = 47;\n              break;\n            }\n            _context10.t13 = {\n              x: 1,\n              y: 1\n            };\n          case 47:\n            _context10.t12 = _context10.t13;\n            _context10.next = 51;\n            break;\n          case 50:\n            _context10.t12 = {\n              x: 1,\n              y: 1\n            };\n          case 51:\n            offsetScale = _context10.t12;\n            _context10.t14 = rectToClientRect;\n            if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {\n              _context10.next = 59;\n              break;\n            }\n            _context10.next = 56;\n            return platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n              elements: elements,\n              rect: rect,\n              offsetParent: offsetParent,\n              strategy: strategy\n            });\n          case 56:\n            _context10.t15 = _context10.sent;\n            _context10.next = 60;\n            break;\n          case 59:\n            _context10.t15 = rect;\n          case 60:\n            _context10.t16 = _context10.t15;\n            elementClientRect = (0, _context10.t14)(_context10.t16);\n            return _context10.abrupt(\"return\", {\n              top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n              bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n              left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n              right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n            });\n          case 63:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _detectOverflow.apply(this, arguments);\n}\nvar arrow = function arrow(options) {\n  return {\n    name: 'arrow',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _objectSpread3, _ref4;\n        var x, y, placement, rects, platform, elements, middlewareData, _ref3, element, _ref3$padding, padding, paddingObject, coords, axis, length, arrowDimensions, isYAxis, minProp, maxProp, clientProp, endDiff, startDiff, arrowOffsetParent, clientSize, centerToReference, largestPossiblePadding, minPadding, maxPadding, min$1, max, center, offset, shouldAddOffset, alignmentOffset;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                x = state.x, y = state.y, placement = state.placement, rects = state.rects, platform = state.platform, elements = state.elements, middlewareData = state.middlewareData; // Since `element` is required, we don't Partial<> the type.\n                _ref3 = evaluate(options, state) || {}, element = _ref3.element, _ref3$padding = _ref3.padding, padding = _ref3$padding === void 0 ? 0 : _ref3$padding;\n                if (!(element == null)) {\n                  _context2.next = 4;\n                  break;\n                }\n                return _context2.abrupt(\"return\", {});\n              case 4:\n                paddingObject = getPaddingObject(padding);\n                coords = {\n                  x: x,\n                  y: y\n                };\n                axis = getAlignmentAxis(placement);\n                length = getAxisLength(axis);\n                _context2.next = 10;\n                return platform.getDimensions(element);\n              case 10:\n                arrowDimensions = _context2.sent;\n                isYAxis = axis === 'y';\n                minProp = isYAxis ? 'top' : 'left';\n                maxProp = isYAxis ? 'bottom' : 'right';\n                clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n                endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n                startDiff = coords[axis] - rects.reference[axis];\n                _context2.next = 19;\n                return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element);\n              case 19:\n                arrowOffsetParent = _context2.sent;\n                clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0; // DOM platform can return `window` as the `offsetParent`.\n                _context2.t0 = !clientSize;\n                if (_context2.t0) {\n                  _context2.next = 26;\n                  break;\n                }\n                _context2.next = 25;\n                return platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent);\n              case 25:\n                _context2.t0 = !_context2.sent;\n              case 26:\n                if (!_context2.t0) {\n                  _context2.next = 28;\n                  break;\n                }\n                clientSize = elements.floating[clientProp] || rects.floating[length];\n              case 28:\n                centerToReference = endDiff / 2 - startDiff / 2; // If the padding is large enough that it causes the arrow to no longer be\n                // centered, modify the padding so that it is centered.\n                largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n                minPadding = min(paddingObject[minProp], largestPossiblePadding);\n                maxPadding = min(paddingObject[maxProp], largestPossiblePadding); // Make sure the arrow doesn't overflow the floating element if the center\n                // point is outside the floating element's bounds.\n                min$1 = minPadding;\n                max = clientSize - arrowDimensions[length] - maxPadding;\n                center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n                offset = clamp(min$1, center, max); // If the reference is small enough that the arrow's padding causes it to\n                // to point to nothing for an aligned placement, adjust the offset of the\n                // floating element itself. To ensure `shift()` continues to take action,\n                // a single reset is performed when this is true.\n                shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n                alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n                return _context2.abrupt(\"return\", (_ref4 = {}, _defineProperty(_ref4, axis, coords[axis] + alignmentOffset), _defineProperty(_ref4, \"data\", _objectSpread((_objectSpread3 = {}, _defineProperty(_objectSpread3, axis, offset), _defineProperty(_objectSpread3, \"centerOffset\", center - offset - alignmentOffset), _objectSpread3), shouldAddOffset && {\n                  alignmentOffset: alignmentOffset\n                })), _defineProperty(_ref4, \"reset\", shouldAddOffset), _ref4));\n              case 39:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  };\n};\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  var allowedPlacementsSortedByAlignment = alignment ? [].concat(_toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) === alignment;\n  })), _toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) !== alignment;\n  }))) : allowedPlacements.filter(function (placement) {\n    return getSide(placement) === placement;\n  });\n  return allowedPlacementsSortedByAlignment.filter(function (placement) {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nvar autoPlacement = function autoPlacement(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE, rects, middlewareData, placement, platform, elements, _evaluate, _evaluate$crossAxis, crossAxis, alignment, _evaluate$allowedPlac, allowedPlacements, _evaluate$autoAlignme, autoAlignment, detectOverflowOptions, placements$1, overflow, currentIndex, currentPlacement, alignmentSides, currentOverflows, allOverflows, nextPlacement, placementsSortedByMostSpace, placementsThatFitOnEachSide, resetPlacement;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                rects = state.rects, middlewareData = state.middlewareData, placement = state.placement, platform = state.platform, elements = state.elements;\n                _evaluate = evaluate(options, state), _evaluate$crossAxis = _evaluate.crossAxis, crossAxis = _evaluate$crossAxis === void 0 ? false : _evaluate$crossAxis, alignment = _evaluate.alignment, _evaluate$allowedPlac = _evaluate.allowedPlacements, allowedPlacements = _evaluate$allowedPlac === void 0 ? placements : _evaluate$allowedPlac, _evaluate$autoAlignme = _evaluate.autoAlignment, autoAlignment = _evaluate$autoAlignme === void 0 ? true : _evaluate$autoAlignme, detectOverflowOptions = _objectWithoutProperties(_evaluate, _excluded);\n                placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n                _context3.next = 5;\n                return detectOverflow(state, detectOverflowOptions);\n              case 5:\n                overflow = _context3.sent;\n                currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n                currentPlacement = placements$1[currentIndex];\n                if (!(currentPlacement == null)) {\n                  _context3.next = 10;\n                  break;\n                }\n                return _context3.abrupt(\"return\", {});\n              case 10:\n                _context3.t0 = getAlignmentSides;\n                _context3.t1 = currentPlacement;\n                _context3.t2 = rects;\n                _context3.next = 15;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n              case 15:\n                _context3.t3 = _context3.sent;\n                alignmentSides = (0, _context3.t0)(_context3.t1, _context3.t2, _context3.t3);\n                if (!(placement !== currentPlacement)) {\n                  _context3.next = 19;\n                  break;\n                }\n                return _context3.abrupt(\"return\", {\n                  reset: {\n                    placement: placements$1[0]\n                  }\n                });\n              case 19:\n                currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n                allOverflows = [].concat(_toConsumableArray(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), [{\n                  placement: currentPlacement,\n                  overflows: currentOverflows\n                }]);\n                nextPlacement = placements$1[currentIndex + 1]; // There are more placements to check.\n                if (!nextPlacement) {\n                  _context3.next = 24;\n                  break;\n                }\n                return _context3.abrupt(\"return\", {\n                  data: {\n                    index: currentIndex + 1,\n                    overflows: allOverflows\n                  },\n                  reset: {\n                    placement: nextPlacement\n                  }\n                });\n              case 24:\n                placementsSortedByMostSpace = allOverflows.map(function (d) {\n                  var alignment = getAlignment(d.placement);\n                  return [d.placement, alignment && crossAxis ?\n                  // Check along the mainAxis and main crossAxis side.\n                  d.overflows.slice(0, 2).reduce(function (acc, v) {\n                    return acc + v;\n                  }, 0) :\n                  // Check only the mainAxis.\n                  d.overflows[0], d.overflows];\n                }).sort(function (a, b) {\n                  return a[1] - b[1];\n                });\n                placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(function (d) {\n                  return d[2].slice(0,\n                  // Aligned placements should not check their opposite crossAxis\n                  // side.\n                  getAlignment(d[0]) ? 2 : 3).every(function (v) {\n                    return v <= 0;\n                  });\n                });\n                resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n                if (!(resetPlacement !== placement)) {\n                  _context3.next = 29;\n                  break;\n                }\n                return _context3.abrupt(\"return\", {\n                  data: {\n                    index: currentIndex + 1,\n                    overflows: allOverflows\n                  },\n                  reset: {\n                    placement: resetPlacement\n                  }\n                });\n              case 29:\n                return _context3.abrupt(\"return\", {});\n              case 30:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nvar flip = function flip(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _middlewareData$arrow, _middlewareData$flip, placement, middlewareData, rects, initialPlacement, platform, elements, _evaluate2, _evaluate2$mainAxis, checkMainAxis, _evaluate2$crossAxis, checkCrossAxis, specifiedFallbackPlacements, _evaluate2$fallbackSt, fallbackStrategy, _evaluate2$fallbackAx, fallbackAxisSideDirection, _evaluate2$flipAlignm, flipAlignment, detectOverflowOptions, side, initialSideAxis, isBasePlacement, rtl, fallbackPlacements, hasFallbackAxisSideDirection, placements, overflow, overflows, overflowsData, _sides, _middlewareData$flip2, _overflowsData$filter, nextIndex, nextPlacement, _overflowsData$, ignoreCrossAxisOverflow, hasInitialMainAxisOverflow, resetPlacement, _overflowsData$filter2, _placement;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                placement = state.placement, middlewareData = state.middlewareData, rects = state.rects, initialPlacement = state.initialPlacement, platform = state.platform, elements = state.elements;\n                _evaluate2 = evaluate(options, state), _evaluate2$mainAxis = _evaluate2.mainAxis, checkMainAxis = _evaluate2$mainAxis === void 0 ? true : _evaluate2$mainAxis, _evaluate2$crossAxis = _evaluate2.crossAxis, checkCrossAxis = _evaluate2$crossAxis === void 0 ? true : _evaluate2$crossAxis, specifiedFallbackPlacements = _evaluate2.fallbackPlacements, _evaluate2$fallbackSt = _evaluate2.fallbackStrategy, fallbackStrategy = _evaluate2$fallbackSt === void 0 ? 'bestFit' : _evaluate2$fallbackSt, _evaluate2$fallbackAx = _evaluate2.fallbackAxisSideDirection, fallbackAxisSideDirection = _evaluate2$fallbackAx === void 0 ? 'none' : _evaluate2$fallbackAx, _evaluate2$flipAlignm = _evaluate2.flipAlignment, flipAlignment = _evaluate2$flipAlignm === void 0 ? true : _evaluate2$flipAlignm, detectOverflowOptions = _objectWithoutProperties(_evaluate2, _excluded2); // If a reset by the arrow was caused due to an alignment offset being\n                // added, we should skip any logic now since `flip()` has already done its\n                // work.\n                // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n                if (!((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset)) {\n                  _context4.next = 4;\n                  break;\n                }\n                return _context4.abrupt(\"return\", {});\n              case 4:\n                side = getSide(placement);\n                initialSideAxis = getSideAxis(initialPlacement);\n                isBasePlacement = getSide(initialPlacement) === initialPlacement;\n                _context4.next = 9;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n              case 9:\n                rtl = _context4.sent;\n                fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n                hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n                if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n                  fallbackPlacements.push.apply(fallbackPlacements, _toConsumableArray(getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl)));\n                }\n                placements = [initialPlacement].concat(_toConsumableArray(fallbackPlacements));\n                _context4.next = 16;\n                return detectOverflow(state, detectOverflowOptions);\n              case 16:\n                overflow = _context4.sent;\n                overflows = [];\n                overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n                if (checkMainAxis) {\n                  overflows.push(overflow[side]);\n                }\n                if (checkCrossAxis) {\n                  _sides = getAlignmentSides(placement, rects, rtl);\n                  overflows.push(overflow[_sides[0]], overflow[_sides[1]]);\n                }\n                overflowsData = [].concat(_toConsumableArray(overflowsData), [{\n                  placement: placement,\n                  overflows: overflows\n                }]);\n\n                // One or more sides is overflowing.\n                if (overflows.every(function (side) {\n                  return side <= 0;\n                })) {\n                  _context4.next = 42;\n                  break;\n                }\n                nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n                nextPlacement = placements[nextIndex];\n                if (!nextPlacement) {\n                  _context4.next = 30;\n                  break;\n                }\n                ignoreCrossAxisOverflow = checkCrossAxis === 'alignment' ? initialSideAxis !== getSideAxis(nextPlacement) : false;\n                hasInitialMainAxisOverflow = ((_overflowsData$ = overflowsData[0]) == null ? void 0 : _overflowsData$.overflows[0]) > 0;\n                if (!(!ignoreCrossAxisOverflow || hasInitialMainAxisOverflow)) {\n                  _context4.next = 30;\n                  break;\n                }\n                return _context4.abrupt(\"return\", {\n                  data: {\n                    index: nextIndex,\n                    overflows: overflowsData\n                  },\n                  reset: {\n                    placement: nextPlacement\n                  }\n                });\n              case 30:\n                // First, find the candidates that fit on the mainAxis side of overflow,\n                // then find the placement that fits the best on the main crossAxis side.\n                resetPlacement = (_overflowsData$filter = overflowsData.filter(function (d) {\n                  return d.overflows[0] <= 0;\n                }).sort(function (a, b) {\n                  return a.overflows[1] - b.overflows[1];\n                })[0]) == null ? void 0 : _overflowsData$filter.placement; // Otherwise fallback.\n                if (resetPlacement) {\n                  _context4.next = 40;\n                  break;\n                }\n                _context4.t0 = fallbackStrategy;\n                _context4.next = _context4.t0 === 'bestFit' ? 35 : _context4.t0 === 'initialPlacement' ? 38 : 40;\n                break;\n              case 35:\n                _placement = (_overflowsData$filter2 = overflowsData.filter(function (d) {\n                  if (hasFallbackAxisSideDirection) {\n                    var currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(function (d) {\n                  return [d.placement, d.overflows.filter(function (overflow) {\n                    return overflow > 0;\n                  }).reduce(function (acc, overflow) {\n                    return acc + overflow;\n                  }, 0)];\n                }).sort(function (a, b) {\n                  return a[1] - b[1];\n                })[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (_placement) {\n                  resetPlacement = _placement;\n                }\n                return _context4.abrupt(\"break\", 40);\n              case 38:\n                resetPlacement = initialPlacement;\n                return _context4.abrupt(\"break\", 40);\n              case 40:\n                if (!(placement !== resetPlacement)) {\n                  _context4.next = 42;\n                  break;\n                }\n                return _context4.abrupt(\"return\", {\n                  reset: {\n                    placement: resetPlacement\n                  }\n                });\n              case 42:\n                return _context4.abrupt(\"return\", {});\n              case 43:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    }\n  };\n};\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nvar hide = function hide(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var rects, _evaluate3, _evaluate3$strategy, strategy, detectOverflowOptions, overflow, offsets, _overflow, _offsets;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                rects = state.rects;\n                _evaluate3 = evaluate(options, state), _evaluate3$strategy = _evaluate3.strategy, strategy = _evaluate3$strategy === void 0 ? 'referenceHidden' : _evaluate3$strategy, detectOverflowOptions = _objectWithoutProperties(_evaluate3, _excluded3);\n                _context5.t0 = strategy;\n                _context5.next = _context5.t0 === 'referenceHidden' ? 5 : _context5.t0 === 'escaped' ? 10 : 15;\n                break;\n              case 5:\n                _context5.next = 7;\n                return detectOverflow(state, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                  elementContext: 'reference'\n                }));\n              case 7:\n                overflow = _context5.sent;\n                offsets = getSideOffsets(overflow, rects.reference);\n                return _context5.abrupt(\"return\", {\n                  data: {\n                    referenceHiddenOffsets: offsets,\n                    referenceHidden: isAnySideFullyClipped(offsets)\n                  }\n                });\n              case 10:\n                _context5.next = 12;\n                return detectOverflow(state, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                  altBoundary: true\n                }));\n              case 12:\n                _overflow = _context5.sent;\n                _offsets = getSideOffsets(_overflow, rects.floating);\n                return _context5.abrupt(\"return\", {\n                  data: {\n                    escapedOffsets: _offsets,\n                    escaped: isAnySideFullyClipped(_offsets)\n                  }\n                });\n              case 15:\n                return _context5.abrupt(\"return\", {});\n              case 16:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  };\n};\nfunction getBoundingRect(rects) {\n  var minX = min.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.left;\n  })));\n  var minY = min.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.top;\n  })));\n  var maxX = max.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.right;\n  })));\n  var maxY = max.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.bottom;\n  })));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  var sortedRects = rects.slice().sort(function (a, b) {\n    return a.y - b.y;\n  });\n  var groups = [];\n  var prevRect = null;\n  for (var i = 0; i < sortedRects.length; i++) {\n    var rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(function (rect) {\n    return rectToClientRect(getBoundingRect(rect));\n  });\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nvar inline = function inline(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var placement, elements, rects, platform, strategy, _evaluate4, _evaluate4$padding, padding, x, y, nativeClientRects, clientRects, fallback, paddingObject, getBoundingClientRect, resetRects;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                getBoundingClientRect = function _getBoundingClientRec() {\n                  // There are two rects and they are disjoined.\n                  if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n                    // Find the first rect in which the point is fully inside.\n                    return clientRects.find(function (rect) {\n                      return x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom;\n                    }) || fallback;\n                  }\n\n                  // There are 2 or more connected rects.\n                  if (clientRects.length >= 2) {\n                    if (getSideAxis(placement) === 'y') {\n                      var firstRect = clientRects[0];\n                      var lastRect = clientRects[clientRects.length - 1];\n                      var isTop = getSide(placement) === 'top';\n                      var _top = firstRect.top;\n                      var _bottom = lastRect.bottom;\n                      var _left = isTop ? firstRect.left : lastRect.left;\n                      var _right = isTop ? firstRect.right : lastRect.right;\n                      var _width = _right - _left;\n                      var _height = _bottom - _top;\n                      return {\n                        top: _top,\n                        bottom: _bottom,\n                        left: _left,\n                        right: _right,\n                        width: _width,\n                        height: _height,\n                        x: _left,\n                        y: _top\n                      };\n                    }\n                    var isLeftSide = getSide(placement) === 'left';\n                    var maxRight = max.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                      return rect.right;\n                    })));\n                    var minLeft = min.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                      return rect.left;\n                    })));\n                    var measureRects = clientRects.filter(function (rect) {\n                      return isLeftSide ? rect.left === minLeft : rect.right === maxRight;\n                    });\n                    var top = measureRects[0].top;\n                    var bottom = measureRects[measureRects.length - 1].bottom;\n                    var left = minLeft;\n                    var right = maxRight;\n                    var width = right - left;\n                    var height = bottom - top;\n                    return {\n                      top: top,\n                      bottom: bottom,\n                      left: left,\n                      right: right,\n                      width: width,\n                      height: height,\n                      x: left,\n                      y: top\n                    };\n                  }\n                  return fallback;\n                };\n                placement = state.placement, elements = state.elements, rects = state.rects, platform = state.platform, strategy = state.strategy; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n                // ClientRect's bounds, despite the event listener being triggered. A\n                // padding of 2 seems to handle this issue.\n                _evaluate4 = evaluate(options, state), _evaluate4$padding = _evaluate4.padding, padding = _evaluate4$padding === void 0 ? 2 : _evaluate4$padding, x = _evaluate4.x, y = _evaluate4.y;\n                _context6.t0 = Array;\n                _context6.next = 6;\n                return platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference);\n              case 6:\n                _context6.t1 = _context6.sent;\n                if (_context6.t1) {\n                  _context6.next = 9;\n                  break;\n                }\n                _context6.t1 = [];\n              case 9:\n                _context6.t2 = _context6.t1;\n                nativeClientRects = _context6.t0.from.call(_context6.t0, _context6.t2);\n                clientRects = getRectsByLine(nativeClientRects);\n                fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n                paddingObject = getPaddingObject(padding);\n                _context6.next = 16;\n                return platform.getElementRects({\n                  reference: {\n                    getBoundingClientRect: getBoundingClientRect\n                  },\n                  floating: elements.floating,\n                  strategy: strategy\n                });\n              case 16:\n                resetRects = _context6.sent;\n                if (!(rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height)) {\n                  _context6.next = 19;\n                  break;\n                }\n                return _context6.abrupt(\"return\", {\n                  reset: {\n                    rects: resetRects\n                  }\n                });\n              case 19:\n                return _context6.abrupt(\"return\", {});\n              case 20:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nfunction convertValueToCoords(_x6, _x7) {\n  return _convertValueToCoords.apply(this, arguments);\n}\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nfunction _convertValueToCoords() {\n  _convertValueToCoords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(state, options) {\n    var placement, platform, elements, rtl, side, alignment, isVertical, mainAxisMulti, crossAxisMulti, rawValue, _ref6, mainAxis, crossAxis, alignmentAxis;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            placement = state.placement, platform = state.platform, elements = state.elements;\n            _context11.next = 3;\n            return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n          case 3:\n            rtl = _context11.sent;\n            side = getSide(placement);\n            alignment = getAlignment(placement);\n            isVertical = getSideAxis(placement) === 'y';\n            mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n            crossAxisMulti = rtl && isVertical ? -1 : 1;\n            rawValue = evaluate(options, state); // eslint-disable-next-line prefer-const\n            _ref6 = typeof rawValue === 'number' ? {\n              mainAxis: rawValue,\n              crossAxis: 0,\n              alignmentAxis: null\n            } : {\n              mainAxis: rawValue.mainAxis || 0,\n              crossAxis: rawValue.crossAxis || 0,\n              alignmentAxis: rawValue.alignmentAxis\n            }, mainAxis = _ref6.mainAxis, crossAxis = _ref6.crossAxis, alignmentAxis = _ref6.alignmentAxis;\n            if (alignment && typeof alignmentAxis === 'number') {\n              crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n            }\n            return _context11.abrupt(\"return\", isVertical ? {\n              x: crossAxis * crossAxisMulti,\n              y: mainAxis * mainAxisMulti\n            } : {\n              x: mainAxis * mainAxisMulti,\n              y: crossAxis * crossAxisMulti\n            });\n          case 13:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _convertValueToCoords.apply(this, arguments);\n}\nvar offset = function offset(options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var _middlewareData$offse, _middlewareData$arrow, x, y, placement, middlewareData, diffCoords;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                x = state.x, y = state.y, placement = state.placement, middlewareData = state.middlewareData;\n                _context7.next = 3;\n                return convertValueToCoords(state, options);\n              case 3:\n                diffCoords = _context7.sent;\n                if (!(placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset)) {\n                  _context7.next = 6;\n                  break;\n                }\n                return _context7.abrupt(\"return\", {});\n              case 6:\n                return _context7.abrupt(\"return\", {\n                  x: x + diffCoords.x,\n                  y: y + diffCoords.y,\n                  data: _objectSpread(_objectSpread({}, diffCoords), {}, {\n                    placement: placement\n                  })\n                });\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nvar shift = function shift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var _objectSpread4, _enabled;\n        var x, y, placement, _evaluate5, _evaluate5$mainAxis, checkMainAxis, _evaluate5$crossAxis, checkCrossAxis, _evaluate5$limiter, limiter, detectOverflowOptions, coords, overflow, crossAxis, mainAxis, mainAxisCoord, crossAxisCoord, minSide, maxSide, _min, _max, _minSide, _maxSide, _min2, _max2, limitedCoords;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                x = state.x, y = state.y, placement = state.placement;\n                _evaluate5 = evaluate(options, state), _evaluate5$mainAxis = _evaluate5.mainAxis, checkMainAxis = _evaluate5$mainAxis === void 0 ? true : _evaluate5$mainAxis, _evaluate5$crossAxis = _evaluate5.crossAxis, checkCrossAxis = _evaluate5$crossAxis === void 0 ? false : _evaluate5$crossAxis, _evaluate5$limiter = _evaluate5.limiter, limiter = _evaluate5$limiter === void 0 ? {\n                  fn: function fn(_ref) {\n                    var x = _ref.x,\n                      y = _ref.y;\n                    return {\n                      x: x,\n                      y: y\n                    };\n                  }\n                } : _evaluate5$limiter, detectOverflowOptions = _objectWithoutProperties(_evaluate5, _excluded4);\n                coords = {\n                  x: x,\n                  y: y\n                };\n                _context8.next = 5;\n                return detectOverflow(state, detectOverflowOptions);\n              case 5:\n                overflow = _context8.sent;\n                crossAxis = getSideAxis(getSide(placement));\n                mainAxis = getOppositeAxis(crossAxis);\n                mainAxisCoord = coords[mainAxis];\n                crossAxisCoord = coords[crossAxis];\n                if (checkMainAxis) {\n                  minSide = mainAxis === 'y' ? 'top' : 'left';\n                  maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n                  _min = mainAxisCoord + overflow[minSide];\n                  _max = mainAxisCoord - overflow[maxSide];\n                  mainAxisCoord = clamp(_min, mainAxisCoord, _max);\n                }\n                if (checkCrossAxis) {\n                  _minSide = crossAxis === 'y' ? 'top' : 'left';\n                  _maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n                  _min2 = crossAxisCoord + overflow[_minSide];\n                  _max2 = crossAxisCoord - overflow[_maxSide];\n                  crossAxisCoord = clamp(_min2, crossAxisCoord, _max2);\n                }\n                limitedCoords = limiter.fn(_objectSpread(_objectSpread({}, state), {}, (_objectSpread4 = {}, _defineProperty(_objectSpread4, mainAxis, mainAxisCoord), _defineProperty(_objectSpread4, crossAxis, crossAxisCoord), _objectSpread4)));\n                return _context8.abrupt(\"return\", _objectSpread(_objectSpread({}, limitedCoords), {}, {\n                  data: {\n                    x: limitedCoords.x - x,\n                    y: limitedCoords.y - y,\n                    enabled: (_enabled = {}, _defineProperty(_enabled, mainAxis, checkMainAxis), _defineProperty(_enabled, crossAxis, checkCrossAxis), _enabled)\n                  }\n                }));\n              case 14:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nvar limitShift = function limitShift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options: options,\n    fn: function fn(state) {\n      var _ref5;\n      var x = state.x,\n        y = state.y,\n        placement = state.placement,\n        rects = state.rects,\n        middlewareData = state.middlewareData;\n      var _evaluate6 = evaluate(options, state),\n        _evaluate6$offset = _evaluate6.offset,\n        offset = _evaluate6$offset === void 0 ? 0 : _evaluate6$offset,\n        _evaluate6$mainAxis = _evaluate6.mainAxis,\n        checkMainAxis = _evaluate6$mainAxis === void 0 ? true : _evaluate6$mainAxis,\n        _evaluate6$crossAxis = _evaluate6.crossAxis,\n        checkCrossAxis = _evaluate6$crossAxis === void 0 ? true : _evaluate6$crossAxis;\n      var coords = {\n        x: x,\n        y: y\n      };\n      var crossAxis = getSideAxis(placement);\n      var mainAxis = getOppositeAxis(crossAxis);\n      var mainAxisCoord = coords[mainAxis];\n      var crossAxisCoord = coords[crossAxis];\n      var rawOffset = evaluate(offset, state);\n      var computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : _objectSpread({\n        mainAxis: 0,\n        crossAxis: 0\n      }, rawOffset);\n      if (checkMainAxis) {\n        var len = mainAxis === 'y' ? 'height' : 'width';\n        var limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        var limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        var _len = mainAxis === 'y' ? 'width' : 'height';\n        var isOriginSide = ['top', 'left'].includes(getSide(placement));\n        var _limitMin = rects.reference[crossAxis] - rects.floating[_len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        var _limitMax = rects.reference[crossAxis] + rects.reference[_len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < _limitMin) {\n          crossAxisCoord = _limitMin;\n        } else if (crossAxisCoord > _limitMax) {\n          crossAxisCoord = _limitMax;\n        }\n      }\n      return _ref5 = {}, _defineProperty(_ref5, mainAxis, mainAxisCoord), _defineProperty(_ref5, crossAxis, crossAxisCoord), _ref5;\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nvar size = function size(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var _state$middlewareData, _state$middlewareData2, placement, rects, platform, elements, _evaluate7, _evaluate7$apply, apply, detectOverflowOptions, overflow, side, alignment, isYAxis, _rects$floating, width, height, heightSide, widthSide, maximumClippingHeight, maximumClippingWidth, overflowAvailableHeight, overflowAvailableWidth, noShift, availableHeight, availableWidth, xMin, xMax, yMin, yMax, nextDimensions;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                placement = state.placement, rects = state.rects, platform = state.platform, elements = state.elements;\n                _evaluate7 = evaluate(options, state), _evaluate7$apply = _evaluate7.apply, apply = _evaluate7$apply === void 0 ? function () {} : _evaluate7$apply, detectOverflowOptions = _objectWithoutProperties(_evaluate7, _excluded5);\n                _context9.next = 4;\n                return detectOverflow(state, detectOverflowOptions);\n              case 4:\n                overflow = _context9.sent;\n                side = getSide(placement);\n                alignment = getAlignment(placement);\n                isYAxis = getSideAxis(placement) === 'y';\n                _rects$floating = rects.floating, width = _rects$floating.width, height = _rects$floating.height;\n                if (!(side === 'top' || side === 'bottom')) {\n                  _context9.next = 28;\n                  break;\n                }\n                heightSide = side;\n                _context9.t0 = alignment;\n                _context9.next = 14;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n              case 14:\n                if (!_context9.sent) {\n                  _context9.next = 18;\n                  break;\n                }\n                _context9.t1 = 'start';\n                _context9.next = 19;\n                break;\n              case 18:\n                _context9.t1 = 'end';\n              case 19:\n                _context9.t2 = _context9.t1;\n                if (!(_context9.t0 === _context9.t2)) {\n                  _context9.next = 24;\n                  break;\n                }\n                _context9.t3 = 'left';\n                _context9.next = 25;\n                break;\n              case 24:\n                _context9.t3 = 'right';\n              case 25:\n                widthSide = _context9.t3;\n                _context9.next = 30;\n                break;\n              case 28:\n                widthSide = side;\n                heightSide = alignment === 'end' ? 'top' : 'bottom';\n              case 30:\n                maximumClippingHeight = height - overflow.top - overflow.bottom;\n                maximumClippingWidth = width - overflow.left - overflow.right;\n                overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n                overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n                noShift = !state.middlewareData.shift;\n                availableHeight = overflowAvailableHeight;\n                availableWidth = overflowAvailableWidth;\n                if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n                  availableWidth = maximumClippingWidth;\n                }\n                if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n                  availableHeight = maximumClippingHeight;\n                }\n                if (noShift && !alignment) {\n                  xMin = max(overflow.left, 0);\n                  xMax = max(overflow.right, 0);\n                  yMin = max(overflow.top, 0);\n                  yMax = max(overflow.bottom, 0);\n                  if (isYAxis) {\n                    availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n                  } else {\n                    availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n                  }\n                }\n                _context9.next = 42;\n                return apply(_objectSpread(_objectSpread({}, state), {}, {\n                  availableWidth: availableWidth,\n                  availableHeight: availableHeight\n                }));\n              case 42:\n                _context9.next = 44;\n                return platform.getDimensions(elements.floating);\n              case 44:\n                nextDimensions = _context9.sent;\n                if (!(width !== nextDimensions.width || height !== nextDimensions.height)) {\n                  _context9.next = 47;\n                  break;\n                }\n                return _context9.abrupt(\"return\", {\n                  reset: {\n                    rects: true\n                  }\n                });\n              case 47:\n                return _context9.abrupt(\"return\", {});\n              case 48:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }))();\n    }\n  };\n};\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };","map":{"version":3,"names":["getSideAxis","getAlignmentAxis","getAxisLength","getSide","getAlignment","evaluate","getPaddingObject","rectToClientRect","min","clamp","placements","getAlignmentSides","getOppositeAlignmentPlacement","getOppositePlacement","getExpandedPlacements","getOppositeAxisPlacements","sides","max","getOppositeAxis","computeCoordsFromPlacement","_ref","placement","rtl","reference","floating","sideAxis","alignmentAxis","alignLength","side","isVertical","commonX","x","width","commonY","y","height","commonAlign","coords","computePosition","config","strategy","middleware","platform","validMiddleware","filter","Boolean","isRTL","getElementRects","rects","statefulPlacement","middlewareData","resetCount","i","length","name","fn","initialPlacement","elements","nextX","nextY","data","reset","detectOverflow","state","options","boundary","rootBoundary","elementContext","altBoundary","padding","paddingObject","altContext","element","isElement","_await$platform$isEle","contextElement","getDocumentElement","getClippingRect","clippingClientRect","rect","getOffsetParent","offsetParent","getScale","offsetScale","convertOffsetParentRelativeRectToViewportRelativeRect","elementClientRect","top","bottom","left","right","arrow","axis","getDimensions","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","offset","shouldAddOffset","alignmentOffset","getPlacementList","alignment","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement","crossAxis","detectOverflowOptions","placements$1","undefined","overflow","currentIndex","_middlewareData$autoP","index","currentPlacement","alignmentSides","currentOverflows","allOverflows","_middlewareData$autoP2","overflows","nextPlacement","placementsSortedByMostSpace","map","d","slice","reduce","acc","v","sort","a","b","placementsThatFitOnEachSide","every","resetPlacement","_placementsThatFitOnE","flip","mainAxis","checkMainAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","_middlewareData$arrow","initialSideAxis","isBasePlacement","hasFallbackAxisSideDirection","push","overflowsData","_middlewareData$flip","nextIndex","_middlewareData$flip2","ignoreCrossAxisOverflow","hasInitialMainAxisOverflow","_overflowsData$","_overflowsData$filter","_overflowsData$filter2","currentSideAxis","getSideOffsets","isAnySideFullyClipped","some","hide","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","getBoundingRect","minX","minY","maxX","maxY","getRectsByLine","sortedRects","groups","prevRect","inline","getBoundingClientRect","clientRects","find","fallback","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","Array","getClientRects","nativeClientRects","from","resetRects","convertValueToCoords","mainAxisMulti","includes","crossAxisMulti","rawValue","diffCoords","_middlewareData$offse","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","enabled","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","size","apply","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","_state$middlewareData","_state$middlewareData2","xMin","xMax","yMin","yMax","nextDimensions"],"sources":["/app/node_modules/@floating-ui/core/dist/floating-ui.core.mjs"],"sourcesContent":["import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          var _overflowsData$;\n          const ignoreCrossAxisOverflow = checkCrossAxis === 'alignment' ? initialSideAxis !== getSideAxis(nextPlacement) : false;\n          const hasInitialMainAxisOverflow = ((_overflowsData$ = overflowsData[0]) == null ? void 0 : _overflowsData$.overflows[0]) > 0;\n          if (!ignoreCrossAxisOverflow || hasInitialMainAxisOverflow) {\n            // Try next placement and re-run the lifecycle.\n            return {\n              data: {\n                index: nextIndex,\n                overflows: overflowsData\n              },\n              reset: {\n                placement: nextPlacement\n              }\n            };\n          }\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}